<refentry id="gmime-gmime-data-wrapper">
<refmeta>
<refentrytitle>gmime-data-wrapper</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GMIME Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gmime-data-wrapper</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



struct      <link linkend="GMimeDataWrapper">GMimeDataWrapper</link>;
<link linkend="GMimeDataWrapper">GMimeDataWrapper</link>* <link linkend="g-mime-data-wrapper-new">g_mime_data_wrapper_new</link>   (void);
<link linkend="GMimeDataWrapper">GMimeDataWrapper</link>* <link linkend="g-mime-data-wrapper-new-with-stream">g_mime_data_wrapper_new_with_stream</link>
                                            (<link linkend="GMimeStream">GMimeStream</link> *stream,
                                             <link linkend="GMimePartEncodingType">GMimePartEncodingType</link> encoding);
void        <link linkend="g-mime-data-wrapper-set-stream">g_mime_data_wrapper_set_stream</link>  (<link linkend="GMimeDataWrapper">GMimeDataWrapper</link> *wrapper,
                                             <link linkend="GMimeStream">GMimeStream</link> *stream);
<link linkend="GMimeStream">GMimeStream</link>* <link linkend="g-mime-data-wrapper-get-stream">g_mime_data_wrapper_get_stream</link> (<link linkend="GMimeDataWrapper">GMimeDataWrapper</link> *wrapper);
void        <link linkend="g-mime-data-wrapper-set-encoding">g_mime_data_wrapper_set_encoding</link>
                                            (<link linkend="GMimeDataWrapper">GMimeDataWrapper</link> *wrapper,
                                             <link linkend="GMimePartEncodingType">GMimePartEncodingType</link> encoding);
<link linkend="GMimePartEncodingType">GMimePartEncodingType</link> <link linkend="g-mime-data-wrapper-get-encoding">g_mime_data_wrapper_get_encoding</link>
                                            (<link linkend="GMimeDataWrapper">GMimeDataWrapper</link> *wrapper);
<link linkend="ssize-t">ssize_t</link>     <link linkend="g-mime-data-wrapper-write-to-stream">g_mime_data_wrapper_write_to_stream</link>
                                            (<link linkend="GMimeDataWrapper">GMimeDataWrapper</link> *wrapper,
                                             <link linkend="GMimeStream">GMimeStream</link> *stream);


</synopsis>
</refsynopsisdiv>







<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GMimeDataWrapper">struct GMimeDataWrapper</title>
<programlisting>struct GMimeDataWrapper {
	GObject parent_object;
	
	GMimePartEncodingType encoding;
	GMimeStream *stream;
};
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="g-mime-data-wrapper-new">g_mime_data_wrapper_new ()</title>
<programlisting><link linkend="GMimeDataWrapper">GMimeDataWrapper</link>* g_mime_data_wrapper_new   (void);</programlisting>
<para>
Creates a new GMimeDataWrapper object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><para>a new data wrapper object.
</para></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-data-wrapper-new-with-stream">g_mime_data_wrapper_new_with_stream ()</title>
<programlisting><link linkend="GMimeDataWrapper">GMimeDataWrapper</link>* g_mime_data_wrapper_new_with_stream
                                            (<link linkend="GMimeStream">GMimeStream</link> *stream,
                                             <link linkend="GMimePartEncodingType">GMimePartEncodingType</link> encoding);</programlisting>
<para>
Creates a new GMimeDataWrapper object around <parameter>stream</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>stream</parameter>&nbsp;:</term>
<listitem><para> stream
</para></listitem></varlistentry>
<varlistentry><term><parameter>encoding</parameter>&nbsp;:</term>
<listitem><para> stream's encoding
</para></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><para>a data wrapper around <parameter>stream</parameter>. Since the wrapper owns it's
own reference on the stream, caller is responsible for unrefing
it's own copy.
</para></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-data-wrapper-set-stream">g_mime_data_wrapper_set_stream ()</title>
<programlisting>void        g_mime_data_wrapper_set_stream  (<link linkend="GMimeDataWrapper">GMimeDataWrapper</link> *wrapper,
                                             <link linkend="GMimeStream">GMimeStream</link> *stream);</programlisting>
<para>
Replaces the wrapper's internal stream with <parameter>stream</parameter>.
Note: caller is responsible for it's own reference on
<parameter>stream</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>wrapper</parameter>&nbsp;:</term>
<listitem><para> data wrapper
</para></listitem></varlistentry>
<varlistentry><term><parameter>stream</parameter>&nbsp;:</term>
<listitem><para> stream
</para></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-data-wrapper-get-stream">g_mime_data_wrapper_get_stream ()</title>
<programlisting><link linkend="GMimeStream">GMimeStream</link>* g_mime_data_wrapper_get_stream (<link linkend="GMimeDataWrapper">GMimeDataWrapper</link> *wrapper);</programlisting>
<para>
Gets a reference to the stream wrapped by <parameter>wrapper</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>wrapper</parameter>&nbsp;:</term>
<listitem><para> data wrapper
</para></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><para>a reference to the internal stream. Caller is responsable
for unrefing it.
</para></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-data-wrapper-set-encoding">g_mime_data_wrapper_set_encoding ()</title>
<programlisting>void        g_mime_data_wrapper_set_encoding
                                            (<link linkend="GMimeDataWrapper">GMimeDataWrapper</link> *wrapper,
                                             <link linkend="GMimePartEncodingType">GMimePartEncodingType</link> encoding);</programlisting>
<para>
Sets the encoding type of the internal stream.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>wrapper</parameter>&nbsp;:</term>
<listitem><para> data wrapper
</para></listitem></varlistentry>
<varlistentry><term><parameter>encoding</parameter>&nbsp;:</term>
<listitem><para> encoding
</para></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-data-wrapper-get-encoding">g_mime_data_wrapper_get_encoding ()</title>
<programlisting><link linkend="GMimePartEncodingType">GMimePartEncodingType</link> g_mime_data_wrapper_get_encoding
                                            (<link linkend="GMimeDataWrapper">GMimeDataWrapper</link> *wrapper);</programlisting>
<para>
Gets the encoding type of the stream wrapped by <parameter>wrapper</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>wrapper</parameter>&nbsp;:</term>
<listitem><para> data wrapper
</para></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><para>the encoding type of the internal stream.
</para></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-data-wrapper-write-to-stream">g_mime_data_wrapper_write_to_stream ()</title>
<programlisting><link linkend="ssize-t">ssize_t</link>     g_mime_data_wrapper_write_to_stream
                                            (<link linkend="GMimeDataWrapper">GMimeDataWrapper</link> *wrapper,
                                             <link linkend="GMimeStream">GMimeStream</link> *stream);</programlisting>
<para>
Write's the raw (decoded) data to the output stream.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>wrapper</parameter>&nbsp;:</term>
<listitem><para> data wrapper
</para></listitem></varlistentry>
<varlistentry><term><parameter>stream</parameter>&nbsp;:</term>
<listitem><para> output stream
</para></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><para>the number of bytes written or -1 on failure.
</para></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
