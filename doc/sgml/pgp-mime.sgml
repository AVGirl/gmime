<refentry id="gmime-pgp-mime" revision="17 Jun 2001">
<refmeta>
<refentrytitle>pgp-mime</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GMIME Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>pgp-mime</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



void        <link linkend="pgp-mime-init">pgp_mime_init</link>                   (const <link linkend="gchar">gchar</link> *path,
                                             <link linkend="PgpType">PgpType</link> type,
                                             <link linkend="PgpPasswdFunc">PgpPasswdFunc</link> callback,
                                             <link linkend="gpointer">gpointer</link> data);
<link linkend="gboolean">gboolean</link>    <link linkend="pgp-mime-part-is-rfc2015-signed">pgp_mime_part_is_rfc2015_signed</link> (<link linkend="GMimePart">GMimePart</link> *mime_part);
<link linkend="gboolean">gboolean</link>    <link linkend="pgp-mime-part-is-rfc2015-encrypted">pgp_mime_part_is_rfc2015_encrypted</link>
                                            (<link linkend="GMimePart">GMimePart</link> *mime_part);
void        <link linkend="pgp-mime-part-sign">pgp_mime_part_sign</link>              (<link linkend="GMimePart">GMimePart</link> **mime_part,
                                             const <link linkend="gchar">gchar</link> *userid,
                                             <link linkend="PgpHashType">PgpHashType</link> hash,
                                             <link linkend="GMimeException">GMimeException</link> *ex);
<link linkend="gboolean">gboolean</link>    <link linkend="pgp-mime-part-verify-signature">pgp_mime_part_verify_signature</link>  (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             <link linkend="GMimeException">GMimeException</link> *ex);
void        <link linkend="pgp-mime-part-encrypt">pgp_mime_part_encrypt</link>           (<link linkend="GMimePart">GMimePart</link> **mime_part,
                                             const <link linkend="GPtrArray">GPtrArray</link> *recipients,
                                             <link linkend="GMimeException">GMimeException</link> *ex);
<link linkend="GMimePart">GMimePart</link>*  <link linkend="pgp-mime-part-decrypt">pgp_mime_part_decrypt</link>           (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             <link linkend="GMimeException">GMimeException</link> *ex);
</synopsis>
</refsynopsisdiv>





<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="pgp-mime-init">pgp_mime_init ()</title>
<programlisting>void        pgp_mime_init                   (const <link linkend="gchar">gchar</link> *path,
                                             <link linkend="PgpType">PgpType</link> type,
                                             <link linkend="PgpPasswdFunc">PgpPasswdFunc</link> callback,
                                             <link linkend="gpointer">gpointer</link> data);</programlisting>
<para>
Initializes pgp-utils (same as calling pgp_init with the same args)</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>path</parameter>&nbsp;:</entry>
<entry> path to pgp program
</entry></row>
<row><entry align="right"><parameter>type</parameter>&nbsp;:</entry>
<entry> type of pgp program
</entry></row>
<row><entry align="right"><parameter>callback</parameter>&nbsp;:</entry>
<entry> the get-password callback
</entry></row>
<row><entry align="right"><parameter>data</parameter>&nbsp;:</entry>
<entry> user data
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="pgp-mime-part-is-rfc2015-signed">pgp_mime_part_is_rfc2015_signed ()</title>
<programlisting><link linkend="gboolean">gboolean</link>    pgp_mime_part_is_rfc2015_signed (<link linkend="GMimePart">GMimePart</link> *mime_part);</programlisting>
<para>
</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mime_part</parameter>&nbsp;:</entry>
<entry> MIME Part
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>TRUE if it is an rfc2015 multipart/signed.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="pgp-mime-part-is-rfc2015-encrypted">pgp_mime_part_is_rfc2015_encrypted ()</title>
<programlisting><link linkend="gboolean">gboolean</link>    pgp_mime_part_is_rfc2015_encrypted
                                            (<link linkend="GMimePart">GMimePart</link> *mime_part);</programlisting>
<para>
</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mime_part</parameter>&nbsp;:</entry>
<entry> MIME Part
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>TRUE if it is an rfc2015 multipart/encrypted.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="pgp-mime-part-sign">pgp_mime_part_sign ()</title>
<programlisting>void        pgp_mime_part_sign              (<link linkend="GMimePart">GMimePart</link> **mime_part,
                                             const <link linkend="gchar">gchar</link> *userid,
                                             <link linkend="PgpHashType">PgpHashType</link> hash,
                                             <link linkend="GMimeException">GMimeException</link> *ex);</programlisting>
<para>
Constructs a PGP/MIME multipart in compliance with rfc2015 and
replaces <link linkend="part">part</link> with the generated multipart/signed. On failure,
<link linkend="ex">ex</link> will be set and <link linkend="part">part</link> will remain untouched.</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mime_part</parameter>&nbsp;:</entry>
<entry> a MIME part that will be replaced by a pgp signed part
</entry></row>
<row><entry align="right"><parameter>userid</parameter>&nbsp;:</entry>
<entry> userid to sign with
</entry></row>
<row><entry align="right"><parameter>hash</parameter>&nbsp;:</entry>
<entry> one of PGP_HASH_TYPE_MD5 or PGP_HASH_TYPE_SHA1
</entry></row>
<row><entry align="right"><parameter>ex</parameter>&nbsp;:</entry>
<entry> exception which will be set if there are any errors.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="pgp-mime-part-verify-signature">pgp_mime_part_verify_signature ()</title>
<programlisting><link linkend="gboolean">gboolean</link>    pgp_mime_part_verify_signature  (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             <link linkend="GMimeException">GMimeException</link> *ex);</programlisting>
<para>
</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mime_part</parameter>&nbsp;:</entry>
<entry> a multipart/signed MIME Part
</entry></row>
<row><entry align="right"><parameter>ex</parameter>&nbsp;:</entry>
<entry> exception
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>TRUE if the signature is valid otherwise returns
FALSE. Note: you may want to check the exception if it fails as
there may be useful information to give to the user; example:
verification may have failed merely because the user doesn't have
the sender's key on her system.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="pgp-mime-part-encrypt">pgp_mime_part_encrypt ()</title>
<programlisting>void        pgp_mime_part_encrypt           (<link linkend="GMimePart">GMimePart</link> **mime_part,
                                             const <link linkend="GPtrArray">GPtrArray</link> *recipients,
                                             <link linkend="GMimeException">GMimeException</link> *ex);</programlisting>
<para>
Constructs a PGP/MIME multipart in compliance with rfc2015 and
replaces <link linkend="part">part</link> with the generated multipart/signed. On failure,
<link linkend="ex">ex</link> will be set and <link linkend="part">part</link> will remain untouched.</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mime_part</parameter>&nbsp;:</entry>
<entry> a MIME part that will be replaced by a pgp encrypted part
</entry></row>
<row><entry align="right"><parameter>recipients</parameter>&nbsp;:</entry>
<entry> list of recipient PGP Key IDs
</entry></row>
<row><entry align="right"><parameter>ex</parameter>&nbsp;:</entry>
<entry> exception which will be set if there are any errors.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="pgp-mime-part-decrypt">pgp_mime_part_decrypt ()</title>
<programlisting><link linkend="GMimePart">GMimePart</link>*  pgp_mime_part_decrypt           (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             <link linkend="GMimeException">GMimeException</link> *ex);</programlisting>
<para>
</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mime_part</parameter>&nbsp;:</entry>
<entry> a multipart/encrypted MIME Part
</entry></row>
<row><entry align="right"><parameter>ex</parameter>&nbsp;:</entry>
<entry> exception
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>the decrypted MIME Part on success or NULL on fail.
</entry></row>
</tbody></tgroup></informaltable></refsect2>

</refsect1>




</refentry>
