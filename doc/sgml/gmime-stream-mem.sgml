<refentry id="gmime-gmime-stream-mem">
<refmeta>
<refentrytitle>gmime-stream-mem</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GMIME Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gmime-stream-mem</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



struct      <link linkend="GMimeStreamMem">GMimeStreamMem</link>;
<link linkend="GMimeStream">GMimeStream</link>* <link linkend="g-mime-stream-mem-new">g_mime_stream_mem_new</link>          (void);
<link linkend="GMimeStream">GMimeStream</link>* <link linkend="g-mime-stream-mem-new-with-byte-array">g_mime_stream_mem_new_with_byte_array</link>
                                            (<link linkend="GByteArray">GByteArray</link> *array);
<link linkend="GMimeStream">GMimeStream</link>* <link linkend="g-mime-stream-mem-new-with-buffer">g_mime_stream_mem_new_with_buffer</link>
                                            (const char *buffer,
                                             <link linkend="size-t">size_t</link> len);
void        <link linkend="g-mime-stream-mem-set-byte-array">g_mime_stream_mem_set_byte_array</link>
                                            (<link linkend="GMimeStreamMem">GMimeStreamMem</link> *mem,
                                             <link linkend="GByteArray">GByteArray</link> *array);


</synopsis>
</refsynopsisdiv>







<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GMimeStreamMem">struct GMimeStreamMem</title>
<programlisting>struct GMimeStreamMem {

	GMimeStream parent_object;
	
	gboolean owner;
	GByteArray *buffer;
};
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="g-mime-stream-mem-new">g_mime_stream_mem_new ()</title>
<programlisting><link linkend="GMimeStream">GMimeStream</link>* g_mime_stream_mem_new          (void);</programlisting>
<para>
Creates a new GMimeStreamMem object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>a new memory stream.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-stream-mem-new-with-byte-array">g_mime_stream_mem_new_with_byte_array ()</title>
<programlisting><link linkend="GMimeStream">GMimeStream</link>* g_mime_stream_mem_new_with_byte_array
                                            (<link linkend="GByteArray">GByteArray</link> *array);</programlisting>
<para>
Creates a new GMimeStreamMem with data <parameter>array</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>array</parameter>&nbsp;:</term>
<listitem><simpara> source data
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>a new memory stream using <parameter>array</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-stream-mem-new-with-buffer">g_mime_stream_mem_new_with_buffer ()</title>
<programlisting><link linkend="GMimeStream">GMimeStream</link>* g_mime_stream_mem_new_with_buffer
                                            (const char *buffer,
                                             <link linkend="size-t">size_t</link> len);</programlisting>
<para>
Creates a new GMimeStreamMem object and initializes the stream
contents with the first <parameter>len</parameter> bytes of <parameter>buffer</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> stream data
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>len</parameter>&nbsp;:</term>
<listitem><simpara> data length
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>a new memory stream initialized with <parameter>buffer</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-stream-mem-set-byte-array">g_mime_stream_mem_set_byte_array ()</title>
<programlisting>void        g_mime_stream_mem_set_byte_array
                                            (<link linkend="GMimeStreamMem">GMimeStreamMem</link> *mem,
                                             <link linkend="GByteArray">GByteArray</link> *array);</programlisting>
<para>
Sets the byte array on the memory stream. Note: The memory stream
is not responsible for freeing the byte array.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>mem</parameter>&nbsp;:</term>
<listitem><simpara> memory stream
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>array</parameter>&nbsp;:</term>
<listitem><simpara> stream data
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
