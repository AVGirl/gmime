<refentry id="gmime-gmime-stream-mem">
<refmeta>
<refentrytitle>gmime-stream-mem</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GMIME Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gmime-stream-mem</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



#define     <link linkend="GMIME-TYPE-STREAM-MEM-CAPS">GMIME_TYPE_STREAM_MEM</link>
#define     <link linkend="GMIME-IS-STREAM-MEM-CAPS">GMIME_IS_STREAM_MEM</link>             (obj)
#define     <link linkend="GMIME-STREAM-MEM-CAPS">GMIME_STREAM_MEM</link>                (obj)
#define     <link linkend="GMIME-STREAM-MEM-CLASS-CAPS">GMIME_STREAM_MEM_CLASS</link>          (klass)
#define     <link linkend="GMIME-IS-STREAM-MEM-CLASS-CAPS">GMIME_IS_STREAM_MEM_CLASS</link>       (klass)
#define     <link linkend="GMIME-STREAM-MEM-GET-CLASS-CAPS">GMIME_STREAM_MEM_GET_CLASS</link>      (obj)
struct      <link linkend="GMimeStreamMem">GMimeStreamMem</link>;
struct      <link linkend="GMimeStreamMemClass">GMimeStreamMemClass</link>;
<link linkend="GType">GType</link>       <link linkend="g-mime-stream-mem-get-type">g_mime_stream_mem_get_type</link>      (void);
<link linkend="GMimeStream">GMimeStream</link>* <link linkend="g-mime-stream-mem-new">g_mime_stream_mem_new</link>          (void);
<link linkend="GMimeStream">GMimeStream</link>* <link linkend="g-mime-stream-mem-new-with-byte-array">g_mime_stream_mem_new_with_byte_array</link>
                                            (<link linkend="GByteArray">GByteArray</link> *array);
<link linkend="GMimeStream">GMimeStream</link>* <link linkend="g-mime-stream-mem-new-with-buffer">g_mime_stream_mem_new_with_buffer</link>
                                            (const char *buffer,
                                             <link linkend="size-t">size_t</link> len);
void        <link linkend="g-mime-stream-mem-set-byte-array">g_mime_stream_mem_set_byte_array</link>
                                            (<link linkend="GMimeStreamMem">GMimeStreamMem</link> *mem,
                                             <link linkend="GByteArray">GByteArray</link> *array);
</synopsis>
</refsynopsisdiv>





<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GMIME-TYPE-STREAM-MEM-CAPS">GMIME_TYPE_STREAM_MEM</title>
<programlisting>#define GMIME_TYPE_STREAM_MEM            (g_mime_stream_mem_get_type ())
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GMIME-IS-STREAM-MEM-CAPS">GMIME_IS_STREAM_MEM()</title>
<programlisting>#define GMIME_IS_STREAM_MEM(obj)         (GMIME_CHECK_TYPE ((obj), GMIME_TYPE_STREAM_MEM))
</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>obj</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="GMIME-STREAM-MEM-CAPS">GMIME_STREAM_MEM()</title>
<programlisting>#define GMIME_STREAM_MEM(obj)            (GMIME_CHECK_CAST ((obj), GMIME_TYPE_STREAM_MEM, GMimeStreamMem))
</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>obj</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="GMIME-STREAM-MEM-CLASS-CAPS">GMIME_STREAM_MEM_CLASS()</title>
<programlisting>#define GMIME_STREAM_MEM_CLASS(klass)    (GMIME_CHECK_CLASS_CAST ((klass), GMIME_TYPE_STREAM_MEM, GMimeStreamMemClass))
</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>klass</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="GMIME-IS-STREAM-MEM-CLASS-CAPS">GMIME_IS_STREAM_MEM_CLASS()</title>
<programlisting>#define GMIME_IS_STREAM_MEM_CLASS(klass) (GMIME_CHECK_CLASS_TYPE ((klass), GMIME_TYPE_STREAM_MEM))
</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>klass</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="GMIME-STREAM-MEM-GET-CLASS-CAPS">GMIME_STREAM_MEM_GET_CLASS()</title>
<programlisting>#define GMIME_STREAM_MEM_GET_CLASS(obj)  (GMIME_CHECK_GET_CLASS ((obj), GMIME_TYPE_STREAM_MEM, GMimeStreamMemClass))
</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>obj</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="GMimeStreamMem">struct GMimeStreamMem</title>
<programlisting>struct GMimeStreamMem {
	GMimeStream parent_object;
	
	gboolean owner;
	GByteArray *buffer;
};
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GMimeStreamMemClass">struct GMimeStreamMemClass</title>
<programlisting>struct GMimeStreamMemClass;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="g-mime-stream-mem-get-type">g_mime_stream_mem_get_type ()</title>
<programlisting><link linkend="GType">GType</link>       g_mime_stream_mem_get_type      (void);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="g-mime-stream-mem-new">g_mime_stream_mem_new ()</title>
<programlisting><link linkend="GMimeStream">GMimeStream</link>* g_mime_stream_mem_new          (void);</programlisting>
<para>
Creates a new GMimeStreamMem object.</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>a new memory stream.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="g-mime-stream-mem-new-with-byte-array">g_mime_stream_mem_new_with_byte_array ()</title>
<programlisting><link linkend="GMimeStream">GMimeStream</link>* g_mime_stream_mem_new_with_byte_array
                                            (<link linkend="GByteArray">GByteArray</link> *array);</programlisting>
<para>
Creates a new GMimeStreamMem with data <parameter>array</parameter>.</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>array</parameter>&nbsp;:</entry>
<entry> source data
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>a new memory stream using <parameter>array</parameter>.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="g-mime-stream-mem-new-with-buffer">g_mime_stream_mem_new_with_buffer ()</title>
<programlisting><link linkend="GMimeStream">GMimeStream</link>* g_mime_stream_mem_new_with_buffer
                                            (const char *buffer,
                                             <link linkend="size-t">size_t</link> len);</programlisting>
<para>
Creates a new GMimeStreamMem object and initializes the stream
contents with the first <parameter>len</parameter> bytes of <parameter>buffer</parameter>.</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>buffer</parameter>&nbsp;:</entry>
<entry> stream data
</entry></row>
<row><entry align="right"><parameter>len</parameter>&nbsp;:</entry>
<entry> data length
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>a new memory stream initialized with <parameter>buffer</parameter>.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="g-mime-stream-mem-set-byte-array">g_mime_stream_mem_set_byte_array ()</title>
<programlisting>void        g_mime_stream_mem_set_byte_array
                                            (<link linkend="GMimeStreamMem">GMimeStreamMem</link> *mem,
                                             <link linkend="GByteArray">GByteArray</link> *array);</programlisting>
<para>
Sets the byte array on the memory stream. Note: The memory stream
is not responsible for freeing the byte array.</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mem</parameter>&nbsp;:</entry>
<entry> memory stream
</entry></row>
<row><entry align="right"><parameter>array</parameter>&nbsp;:</entry>
<entry> stream data
</entry></row>
</tbody></tgroup></informaltable></refsect2>

</refsect1>




</refentry>
