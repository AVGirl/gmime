<refentry id="gmime-gmime-stream-buffer">
<refmeta>
<refentrytitle>gmime-stream-buffer</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GMIME Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gmime-stream-buffer</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



enum        <link linkend="GMimeStreamBufferMode">GMimeStreamBufferMode</link>;
struct      <link linkend="GMimeStreamBuffer">GMimeStreamBuffer</link>;
<link linkend="GMimeStream">GMimeStream</link>* <link linkend="g-mime-stream-buffer-new">g_mime_stream_buffer_new</link>       (<link linkend="GMimeStream">GMimeStream</link> *source,
                                             <link linkend="GMimeStreamBufferMode">GMimeStreamBufferMode</link> mode);
<link linkend="ssize-t">ssize_t</link>     <link linkend="g-mime-stream-buffer-gets">g_mime_stream_buffer_gets</link>       (<link linkend="GMimeStream">GMimeStream</link> *stream,
                                             char *buf,
                                             <link linkend="size-t">size_t</link> max);
void        <link linkend="g-mime-stream-buffer-readln">g_mime_stream_buffer_readln</link>     (<link linkend="GMimeStream">GMimeStream</link> *stream,
                                             <link linkend="GByteArray">GByteArray</link> *buffer);


</synopsis>
</refsynopsisdiv>







<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GMimeStreamBufferMode">enum GMimeStreamBufferMode</title>
<programlisting>typedef enum {
	GMIME_STREAM_BUFFER_CACHE_READ,
	GMIME_STREAM_BUFFER_BLOCK_READ,
	GMIME_STREAM_BUFFER_BLOCK_WRITE,
} GMimeStreamBufferMode;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GMimeStreamBuffer">struct GMimeStreamBuffer</title>
<programlisting>struct GMimeStreamBuffer {

	GMimeStream parent_object;
	
	GMimeStream *source;
	
	unsigned char *buffer;
	unsigned char *bufptr;
	unsigned char *bufend;
	ssize_t buflen;
	
	GMimeStreamBufferMode mode;
};
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="g-mime-stream-buffer-new">g_mime_stream_buffer_new ()</title>
<programlisting><link linkend="GMimeStream">GMimeStream</link>* g_mime_stream_buffer_new       (<link linkend="GMimeStream">GMimeStream</link> *source,
                                             <link linkend="GMimeStreamBufferMode">GMimeStreamBufferMode</link> mode);</programlisting>
<para>
Creates a new GMimeStreamBuffer object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>source</parameter>&nbsp;:</term>
<listitem><simpara> source stream
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>mode</parameter>&nbsp;:</term>
<listitem><simpara> buffering mode
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>a new buffer stream with source <parameter>source</parameter> and mode <parameter>mode</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-stream-buffer-gets">g_mime_stream_buffer_gets ()</title>
<programlisting><link linkend="ssize-t">ssize_t</link>     g_mime_stream_buffer_gets       (<link linkend="GMimeStream">GMimeStream</link> *stream,
                                             char *buf,
                                             <link linkend="size-t">size_t</link> max);</programlisting>
<para>
Reads in at most one less than <parameter>max</parameter> characters from <parameter>stream</parameter> and
stores them into the buffer pointed to by <parameter>buf</parameter>. Reading stops after
an EOS or newline (#'\n'). If a newline is read, it is stored into
the buffer. A #'\0' is stored after the last character in the
buffer.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>stream</parameter>&nbsp;:</term>
<listitem><simpara> stream
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buf</parameter>&nbsp;:</term>
<listitem><simpara> line buffer
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>max</parameter>&nbsp;:</term>
<listitem><simpara> max length of a line
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>the number of characters read into <parameter>buf</parameter> on success and -1
on fail.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-stream-buffer-readln">g_mime_stream_buffer_readln ()</title>
<programlisting>void        g_mime_stream_buffer_readln     (<link linkend="GMimeStream">GMimeStream</link> *stream,
                                             <link linkend="GByteArray">GByteArray</link> *buffer);</programlisting>
<para>
Reads a single line into <parameter>buffer</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>stream</parameter>&nbsp;:</term>
<listitem><simpara> stream
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> output buffer
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
