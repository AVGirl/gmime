<refentry id="gmime-gmime-part" revision="2 Dec 2000">
<refmeta>
<refentrytitle>gmime-part</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GMIME Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gmime-part</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



enum        <link linkend="GMimePartEncodingType">GMimePartEncodingType</link>;
struct      <link linkend="GMimePartDispositionParam">GMimePartDispositionParam</link>;
struct      <link linkend="GMimePartDisposition">GMimePartDisposition</link>;
struct      <link linkend="GMimePart">GMimePart</link>;
<link linkend="GMimePart">GMimePart</link>*  <link linkend="g-mime-part-new">g_mime_part_new</link>                 (void);
<link linkend="GMimePart">GMimePart</link>*  <link linkend="g-mime-part-new-with-type">g_mime_part_new_with_type</link>       (const <link linkend="gchar">gchar</link> *type,
                                             const <link linkend="gchar">gchar</link> *subtype);
void        <link linkend="g-mime-part-destroy">g_mime_part_destroy</link>             (<link linkend="GMimePart">GMimePart</link> *mime_part);
void        <link linkend="g-mime-part-set-content-description">g_mime_part_set_content_description</link>
                                            (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             const <link linkend="gchar">gchar</link> *description);
const <link linkend="gchar">gchar</link>* <link linkend="g-mime-part-get-content-description">g_mime_part_get_content_description</link>
                                            (<link linkend="GMimePart">GMimePart</link> *mime_part);
void        <link linkend="g-mime-part-set-content-id">g_mime_part_set_content_id</link>      (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             const <link linkend="gchar">gchar</link> *content_id);
const <link linkend="gchar">gchar</link>* <link linkend="g-mime-part-get-content-id">g_mime_part_get_content_id</link>     (<link linkend="GMimePart">GMimePart</link> *mime_part);
void        <link linkend="g-mime-part-set-content-type">g_mime_part_set_content_type</link>    (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             <link linkend="GMimeContentType">GMimeContentType</link> *mime_type);
const <link linkend="GMimeContentType">GMimeContentType</link>* <link linkend="g-mime-part-get-content-type">g_mime_part_get_content_type</link>
                                            (<link linkend="GMimePart">GMimePart</link> *mime_part);
void        <link linkend="g-mime-part-set-encoding">g_mime_part_set_encoding</link>        (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             <link linkend="GMimePartEncodingType">GMimePartEncodingType</link> encoding);
<link linkend="GMimePartEncodingType">GMimePartEncodingType</link> <link linkend="g-mime-part-get-encoding">g_mime_part_get_encoding</link>
                                            (<link linkend="GMimePart">GMimePart</link> *mime_part);
const <link linkend="gchar">gchar</link>* <link linkend="g-mime-part-encoding-to-string">g_mime_part_encoding_to_string</link> (<link linkend="GMimePartEncodingType">GMimePartEncodingType</link> encoding);
<link linkend="GMimePartEncodingType">GMimePartEncodingType</link> <link linkend="g-mime-part-encoding-from-string">g_mime_part_encoding_from_string</link>
                                            (const <link linkend="gchar">gchar</link> *encoding);
void        <link linkend="g-mime-part-set-content-disposition">g_mime_part_set_content_disposition</link>
                                            (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             const <link linkend="gchar">gchar</link> *disposition);
const <link linkend="gchar">gchar</link>* <link linkend="g-mime-part-get-content-disposition">g_mime_part_get_content_disposition</link>
                                            (<link linkend="GMimePart">GMimePart</link> *mime_part);
void        <link linkend="g-mime-part-add-content-disposition-parameter">g_mime_part_add_content_disposition_parameter</link>
                                            (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             const <link linkend="gchar">gchar</link> *name,
                                             const <link linkend="gchar">gchar</link> *value);
const <link linkend="gchar">gchar</link>* <link linkend="g-mime-part-get-content-disposition-parameter">g_mime_part_get_content_disposition_parameter</link>
                                            (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             const <link linkend="gchar">gchar</link> *name);
void        <link linkend="g-mime-part-set-filename">g_mime_part_set_filename</link>        (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             const <link linkend="gchar">gchar</link> *filename);
const <link linkend="gchar">gchar</link>* <link linkend="g-mime-part-get-filename">g_mime_part_get_filename</link>       (<link linkend="GMimePart">GMimePart</link> *mime_part);
void        <link linkend="g-mime-part-set-boundary">g_mime_part_set_boundary</link>        (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             const <link linkend="gchar">gchar</link> *boundary);
const <link linkend="gchar">gchar</link>* <link linkend="g-mime-part-get-boundary">g_mime_part_get_boundary</link>       (<link linkend="GMimePart">GMimePart</link> *mime_part);
void        <link linkend="g-mime-part-set-content">g_mime_part_set_content</link>         (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             const char *content,
                                             <link linkend="guint">guint</link> len);
void        <link linkend="g-mime-part-set-pre-encoded-content">g_mime_part_set_pre_encoded_content</link>
                                            (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             const char *content,
                                             <link linkend="guint">guint</link> len,
                                             <link linkend="GMimePartEncodingType">GMimePartEncodingType</link> encoding);
const <link linkend="gchar">gchar</link>* <link linkend="g-mime-part-get-content">g_mime_part_get_content</link>        (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             <link linkend="guint">guint</link> *len);
void        <link linkend="g-mime-part-add-child">g_mime_part_add_child</link>           (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             <link linkend="GMimePart">GMimePart</link> *child);
<link linkend="gchar">gchar</link>*      <link linkend="g-mime-part-to-string">g_mime_part_to_string</link>           (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             <link linkend="gboolean">gboolean</link> toplevel);
</synopsis>
</refsynopsisdiv>





<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GMimePartEncodingType">enum GMimePartEncodingType</title>
<programlisting>enum GMimePartEncodingType {
        GMIME_PART_ENCODING_DEFAULT,
        GMIME_PART_ENCODING_7BIT,
        GMIME_PART_ENCODING_8BIT,
        GMIME_PART_ENCODING_BASE64,
        GMIME_PART_ENCODING_QUOTEDPRINTABLE,
        GMIME_PART_NUM_ENCODINGS
};
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GMimePartDispositionParam">struct GMimePartDispositionParam</title>
<programlisting>struct GMimePartDispositionParam;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GMimePartDisposition">struct GMimePartDisposition</title>
<programlisting>struct GMimePartDisposition {
	gchar *disposition;
	GList *params;     /* of type GMimeParam */
	GHashTable *param_hash;
};
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GMimePart">struct GMimePart</title>
<programlisting>struct GMimePart {
	gchar *description;
	gchar *content_id;
	GMimeContentType *mime_type;
	GMimePartEncodingType encoding;
	GMimePartDisposition *disposition;
	gchar *boundary;
	
	GByteArray *content;
	
	GList *children;   /* of type GMimePart */
};
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="g-mime-part-new">g_mime_part_new ()</title>
<programlisting><link linkend="GMimePart">GMimePart</link>*  g_mime_part_new                 (void);</programlisting>
<para>
</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>an empty MIME Part object with a default content-type of
text/plain.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="g-mime-part-new-with-type">g_mime_part_new_with_type ()</title>
<programlisting><link linkend="GMimePart">GMimePart</link>*  g_mime_part_new_with_type       (const <link linkend="gchar">gchar</link> *type,
                                             const <link linkend="gchar">gchar</link> *subtype);</programlisting>
<para>
</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>type</parameter>&nbsp;:</entry>
<entry> content-type
</entry></row>
<row><entry align="right"><parameter>subtype</parameter>&nbsp;:</entry>
<entry> content-subtype
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>an empty MIME Part object with the specified content-type.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="g-mime-part-destroy">g_mime_part_destroy ()</title>
<programlisting>void        g_mime_part_destroy             (<link linkend="GMimePart">GMimePart</link> *mime_part);</programlisting>
<para>
Releases all memory used by this mime part and all child mime parts.</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mime_part</parameter>&nbsp;:</entry>
<entry> Mime part to destroy
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="g-mime-part-set-content-description">g_mime_part_set_content_description ()</title>
<programlisting>void        g_mime_part_set_content_description
                                            (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             const <link linkend="gchar">gchar</link> *description);</programlisting>
<para>
Set the content description for the specified mime part.</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mime_part</parameter>&nbsp;:</entry>
<entry> Mime part
</entry></row>
<row><entry align="right"><parameter>description</parameter>&nbsp;:</entry>
<entry> content description
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="g-mime-part-get-content-description">g_mime_part_get_content_description ()</title>
<programlisting>const <link linkend="gchar">gchar</link>* g_mime_part_get_content_description
                                            (<link linkend="GMimePart">GMimePart</link> *mime_part);</programlisting>
<para>
</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mime_part</parameter>&nbsp;:</entry>
<entry> Mime part
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>the content description for the specified mime part.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="g-mime-part-set-content-id">g_mime_part_set_content_id ()</title>
<programlisting>void        g_mime_part_set_content_id      (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             const <link linkend="gchar">gchar</link> *content_id);</programlisting>
<para>
Set the content id for the specified mime part.</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mime_part</parameter>&nbsp;:</entry>
<entry> Mime part
</entry></row>
<row><entry align="right"><parameter>content_id</parameter>&nbsp;:</entry>
<entry> content id
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="g-mime-part-get-content-id">g_mime_part_get_content_id ()</title>
<programlisting>const <link linkend="gchar">gchar</link>* g_mime_part_get_content_id     (<link linkend="GMimePart">GMimePart</link> *mime_part);</programlisting>
<para>
</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mime_part</parameter>&nbsp;:</entry>
<entry> Mime part
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>the content id for the specified mime part.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="g-mime-part-set-content-type">g_mime_part_set_content_type ()</title>
<programlisting>void        g_mime_part_set_content_type    (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             <link linkend="GMimeContentType">GMimeContentType</link> *mime_type);</programlisting>
<para>
Set the content type/subtype for the specified mime part.</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mime_part</parameter>&nbsp;:</entry>
<entry> Mime part
</entry></row>
<row><entry align="right"><parameter>mime_type</parameter>&nbsp;:</entry>
<entry> Mime content-type
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="g-mime-part-get-content-type">g_mime_part_get_content_type ()</title>
<programlisting>const <link linkend="GMimeContentType">GMimeContentType</link>* g_mime_part_get_content_type
                                            (<link linkend="GMimePart">GMimePart</link> *mime_part);</programlisting>
<para>
</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mime_part</parameter>&nbsp;:</entry>
<entry> Mime part
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>the content-type object for the specified mime part.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="g-mime-part-set-encoding">g_mime_part_set_encoding ()</title>
<programlisting>void        g_mime_part_set_encoding        (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             <link linkend="GMimePartEncodingType">GMimePartEncodingType</link> encoding);</programlisting>
<para>
Set the content encoding for the specified mime part. Available
values for the encoding are: GMIME_PART_ENCODING_DEFAULT,
GMIME_PART_ENCODING_7BIT, GMIME_PART_ENCODING_8BIT,
GMIME_PART_ENCODING_BASE64 and GMIME_PART_ENCODING_QUOTEDPRINTABLE.</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mime_part</parameter>&nbsp;:</entry>
<entry> Mime part
</entry></row>
<row><entry align="right"><parameter>encoding</parameter>&nbsp;:</entry>
<entry> Mime encoding
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="g-mime-part-get-encoding">g_mime_part_get_encoding ()</title>
<programlisting><link linkend="GMimePartEncodingType">GMimePartEncodingType</link> g_mime_part_get_encoding
                                            (<link linkend="GMimePart">GMimePart</link> *mime_part);</programlisting>
<para>
</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mime_part</parameter>&nbsp;:</entry>
<entry> Mime part
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>the content encoding for the specified mime part. The
return value will be one of the following:
GMIME_PART_ENCODING_DEFAULT, GMIME_PART_ENCODING_7BIT,
GMIME_PART_ENCODING_8BIT, GMIME_PART_ENCODING_BASE64 or
GMIME_PART_ENCODING_QUOTEDPRINTABLE.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="g-mime-part-encoding-to-string">g_mime_part_encoding_to_string ()</title>
<programlisting>const <link linkend="gchar">gchar</link>* g_mime_part_encoding_to_string (<link linkend="GMimePartEncodingType">GMimePartEncodingType</link> encoding);</programlisting>
<para>
</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>encoding</parameter>&nbsp;:</entry>
<entry> Mime encoding
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>the encoding type as a string. Available
values for the encoding are: GMIME_PART_ENCODING_DEFAULT,
GMIME_PART_ENCODING_7BIT, GMIME_PART_ENCODING_8BIT,
GMIME_PART_ENCODING_BASE64 and GMIME_PART_ENCODING_QUOTEDPRINTABLE.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="g-mime-part-encoding-from-string">g_mime_part_encoding_from_string ()</title>
<programlisting><link linkend="GMimePartEncodingType">GMimePartEncodingType</link> g_mime_part_encoding_from_string
                                            (const <link linkend="gchar">gchar</link> *encoding);</programlisting>
<para>
</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>encoding</parameter>&nbsp;:</entry>
<entry> Mime encoding in string format
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>the encoding string as a GMimePartEncodingType.
Available values for the encoding are:
GMIME_PART_ENCODING_DEFAULT, GMIME_PART_ENCODING_7BIT,
GMIME_PART_ENCODING_8BIT, GMIME_PART_ENCODING_BASE64 and
GMIME_PART_ENCODING_QUOTEDPRINTABLE.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="g-mime-part-set-content-disposition">g_mime_part_set_content_disposition ()</title>
<programlisting>void        g_mime_part_set_content_disposition
                                            (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             const <link linkend="gchar">gchar</link> *disposition);</programlisting>
<para>
Set the content disposition for the specified mime part</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mime_part</parameter>&nbsp;:</entry>
<entry> Mime part
</entry></row>
<row><entry align="right"><parameter>disposition</parameter>&nbsp;:</entry>
<entry> content disposition
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="g-mime-part-get-content-disposition">g_mime_part_get_content_disposition ()</title>
<programlisting>const <link linkend="gchar">gchar</link>* g_mime_part_get_content_disposition
                                            (<link linkend="GMimePart">GMimePart</link> *mime_part);</programlisting>
<para>
</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mime_part</parameter>&nbsp;:</entry>
<entry> Mime part
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>the content disposition for the specified mime part.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="g-mime-part-add-content-disposition-parameter">g_mime_part_add_content_disposition_parameter ()</title>
<programlisting>void        g_mime_part_add_content_disposition_parameter
                                            (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             const <link linkend="gchar">gchar</link> *name,
                                             const <link linkend="gchar">gchar</link> *value);</programlisting>
<para>
Add a content-disposition parameter to the specified mime part.</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mime_part</parameter>&nbsp;:</entry>
<entry> Mime part
</entry></row>
<row><entry align="right"><parameter>name</parameter>&nbsp;:</entry>
<entry> parameter name
</entry></row>
<row><entry align="right"><parameter>value</parameter>&nbsp;:</entry>
<entry> parameter value
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="g-mime-part-get-content-disposition-parameter">g_mime_part_get_content_disposition_parameter ()</title>
<programlisting>const <link linkend="gchar">gchar</link>* g_mime_part_get_content_disposition_parameter
                                            (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             const <link linkend="gchar">gchar</link> *name);</programlisting>
<para>
</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mime_part</parameter>&nbsp;:</entry>
<entry> Mime part
</entry></row>
<row><entry align="right"><parameter>name</parameter>&nbsp;:</entry>
<entry> parameter name
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>the value of a previously defined content-disposition
parameter specified by <link linkend="name">name</link>.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="g-mime-part-set-filename">g_mime_part_set_filename ()</title>
<programlisting>void        g_mime_part_set_filename        (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             const <link linkend="gchar">gchar</link> *filename);</programlisting>
<para>
Sets the "filename" parameter on the Content-Disposition and also sets the
"name" parameter on the Content-Type.</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mime_part</parameter>&nbsp;:</entry>
<entry> Mime part
</entry></row>
<row><entry align="right"><parameter>filename</parameter>&nbsp;:</entry>
<entry> the filename of the Mime Part's content
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="g-mime-part-get-filename">g_mime_part_get_filename ()</title>
<programlisting>const <link linkend="gchar">gchar</link>* g_mime_part_get_filename       (<link linkend="GMimePart">GMimePart</link> *mime_part);</programlisting>
<para>
</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mime_part</parameter>&nbsp;:</entry>
<entry> Mime part
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>the filename of the specified MIME Part. It first checks to
see if the "filename" parameter was set on the Content-Disposition
and if not then checks the "name" parameter in the Content-Type.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="g-mime-part-set-boundary">g_mime_part_set_boundary ()</title>
<programlisting>void        g_mime_part_set_boundary        (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             const <link linkend="gchar">gchar</link> *boundary);</programlisting>
<para>
Sets the boundary on the mime part.</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mime_part</parameter>&nbsp;:</entry>
<entry> Mime part
</entry></row>
<row><entry align="right"><parameter>boundary</parameter>&nbsp;:</entry>
<entry> the boundary for the multi-part
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="g-mime-part-get-boundary">g_mime_part_get_boundary ()</title>
<programlisting>const <link linkend="gchar">gchar</link>* g_mime_part_get_boundary       (<link linkend="GMimePart">GMimePart</link> *mime_part);</programlisting>
<para>
</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mime_part</parameter>&nbsp;:</entry>
<entry> Mime part
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>the boundary on the mime part.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="g-mime-part-set-content">g_mime_part_set_content ()</title>
<programlisting>void        g_mime_part_set_content         (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             const char *content,
                                             <link linkend="guint">guint</link> len);</programlisting>
<para>
Sets the content of the Mime Part (only non-multiparts)</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mime_part</parameter>&nbsp;:</entry>
<entry> Mime part
</entry></row>
<row><entry align="right"><parameter>content</parameter>&nbsp;:</entry>
<entry> raw mime part content
</entry></row>
<row><entry align="right"><parameter>len</parameter>&nbsp;:</entry>
<entry> raw content length
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="g-mime-part-set-pre-encoded-content">g_mime_part_set_pre_encoded_content ()</title>
<programlisting>void        g_mime_part_set_pre_encoded_content
                                            (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             const char *content,
                                             <link linkend="guint">guint</link> len,
                                             <link linkend="GMimePartEncodingType">GMimePartEncodingType</link> encoding);</programlisting>
<para>
Sets the encoding type and raw content on the mime part after decoding the content.</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mime_part</parameter>&nbsp;:</entry>
<entry> Mime part
</entry></row>
<row><entry align="right"><parameter>content</parameter>&nbsp;:</entry>
<entry> encoded mime part content
</entry></row>
<row><entry align="right"><parameter>len</parameter>&nbsp;:</entry>
<entry> length of the content
</entry></row>
<row><entry align="right"><parameter>encoding</parameter>&nbsp;:</entry>
<entry> content encoding
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="g-mime-part-get-content">g_mime_part_get_content ()</title>
<programlisting>const <link linkend="gchar">gchar</link>* g_mime_part_get_content        (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             <link linkend="guint">guint</link> *len);</programlisting>
<para>
</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mime_part</parameter>&nbsp;:</entry>
<entry> the GMimePart to be decoded.
</entry></row>
<row><entry align="right"><parameter>len</parameter>&nbsp;:</entry>
<entry> decoded length (to be set after processing)
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>a gchar * pointer to the raw contents of the MIME Part
and sets <literal>len</literal> to the length of the buffer.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="g-mime-part-add-child">g_mime_part_add_child ()</title>
<programlisting>void        g_mime_part_add_child           (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             <link linkend="GMimePart">GMimePart</link> *child);</programlisting>
<para>
Adds a child mime part to the parent mime part which *must* be a
multipart.</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mime_part</parameter>&nbsp;:</entry>
<entry> Parent Mime part
</entry></row>
<row><entry align="right"><parameter>child</parameter>&nbsp;:</entry>
<entry> Child Mime part
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="g-mime-part-to-string">g_mime_part_to_string ()</title>
<programlisting><link linkend="gchar">gchar</link>*      g_mime_part_to_string           (<link linkend="GMimePart">GMimePart</link> *mime_part,
                                             <link linkend="gboolean">gboolean</link> toplevel);</programlisting>
<para>
</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mime_part</parameter>&nbsp;:</entry>
<entry> MIME Part
</entry></row>
<row><entry align="right"><parameter>toplevel</parameter>&nbsp;:</entry>
<entry> mime part is the root mime part
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>an allocated string containing the MIME Part. If toplevel
is set to TRUE, then the MIME Part header will contain needed MIME
headers for rfc822 messages.
</entry></row>
</tbody></tgroup></informaltable></refsect2>

</refsect1>




</refentry>
