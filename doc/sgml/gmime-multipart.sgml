<refentry id="gmime-gmime-multipart">
<refmeta>
<refentrytitle>gmime-multipart</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GMIME Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gmime-multipart</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



struct      <link linkend="GMimeMultipart">GMimeMultipart</link>;
<link linkend="GMimeMultipart">GMimeMultipart</link>* <link linkend="g-mime-multipart-new">g_mime_multipart_new</link>        (void);
<link linkend="GMimeMultipart">GMimeMultipart</link>* <link linkend="g-mime-multipart-new-with-subtype">g_mime_multipart_new_with_subtype</link>
                                            (const char *subtype);
void        <link linkend="g-mime-multipart-set-preface">g_mime_multipart_set_preface</link>    (<link linkend="GMimeMultipart">GMimeMultipart</link> *multipart,
                                             const char *preface);
const char* <link linkend="g-mime-multipart-get-preface">g_mime_multipart_get_preface</link>    (<link linkend="GMimeMultipart">GMimeMultipart</link> *multipart);
void        <link linkend="g-mime-multipart-set-postface">g_mime_multipart_set_postface</link>   (<link linkend="GMimeMultipart">GMimeMultipart</link> *multipart,
                                             const char *postface);
const char* <link linkend="g-mime-multipart-get-postface">g_mime_multipart_get_postface</link>   (<link linkend="GMimeMultipart">GMimeMultipart</link> *multipart);
void        <link linkend="g-mime-multipart-set-boundary">g_mime_multipart_set_boundary</link>   (<link linkend="GMimeMultipart">GMimeMultipart</link> *multipart,
                                             const char *boundary);
const char* <link linkend="g-mime-multipart-get-boundary">g_mime_multipart_get_boundary</link>   (<link linkend="GMimeMultipart">GMimeMultipart</link> *multipart);
void        <link linkend="g-mime-multipart-add-part">g_mime_multipart_add_part</link>       (<link linkend="GMimeMultipart">GMimeMultipart</link> *multipart,
                                             <link linkend="GMimeObject">GMimeObject</link> *part);
void        <link linkend="g-mime-multipart-add-part-at">g_mime_multipart_add_part_at</link>    (<link linkend="GMimeMultipart">GMimeMultipart</link> *multipart,
                                             <link linkend="GMimeObject">GMimeObject</link> *part,
                                             int index);
int         <link linkend="g-mime-multipart-get-number">g_mime_multipart_get_number</link>     (<link linkend="GMimeMultipart">GMimeMultipart</link> *multipart);
<link linkend="GMimeObject">GMimeObject</link>* <link linkend="g-mime-multipart-get-part">g_mime_multipart_get_part</link>      (<link linkend="GMimeMultipart">GMimeMultipart</link> *multipart,
                                             int index);
void        <link linkend="g-mime-multipart-remove-part">g_mime_multipart_remove_part</link>    (<link linkend="GMimeMultipart">GMimeMultipart</link> *multipart,
                                             <link linkend="GMimeObject">GMimeObject</link> *part);
<link linkend="GMimeObject">GMimeObject</link>* <link linkend="g-mime-multipart-remove-part-at">g_mime_multipart_remove_part_at</link>
                                            (<link linkend="GMimeMultipart">GMimeMultipart</link> *multipart,
                                             int index);
void        <link linkend="g-mime-multipart-foreach">g_mime_multipart_foreach</link>        (<link linkend="GMimeMultipart">GMimeMultipart</link> *multipart,
                                             <link linkend="GMimePartFunc">GMimePartFunc</link> callback,
                                             <link linkend="gpointer">gpointer</link> user_data);
const <link linkend="GMimeObject">GMimeObject</link>* <link linkend="g-mime-multipart-get-subpart-from-content-id">g_mime_multipart_get_subpart_from_content_id</link>
                                            (<link linkend="GMimeMultipart">GMimeMultipart</link> *multipart,
                                             const char *content_id);


</synopsis>
</refsynopsisdiv>







<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GMimeMultipart">struct GMimeMultipart</title>
<programlisting>struct GMimeMultipart {

	GMimeObject parent_object;
	
	char *boundary;
	
	char *preface;
	char *postface;
	
	GList *subparts;
};
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="g-mime-multipart-new">g_mime_multipart_new ()</title>
<programlisting><link linkend="GMimeMultipart">GMimeMultipart</link>* g_mime_multipart_new        (void);</programlisting>
<para>
Creates a new MIME multipart object with a default content-type of
multipart/mixed.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>an empty MIME multipart object with a default content-type of
multipart/mixed.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-multipart-new-with-subtype">g_mime_multipart_new_with_subtype ()</title>
<programlisting><link linkend="GMimeMultipart">GMimeMultipart</link>* g_mime_multipart_new_with_subtype
                                            (const char *subtype);</programlisting>
<para>
Creates a new MIME multipart object with a content-type of
multipart/<parameter>subtype</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>subtype</parameter>&nbsp;:</term>
<listitem><simpara> content-type subtype
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>an empty MIME multipart object with a content-type of
multipart/<parameter>subtype</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-multipart-set-preface">g_mime_multipart_set_preface ()</title>
<programlisting>void        g_mime_multipart_set_preface    (<link linkend="GMimeMultipart">GMimeMultipart</link> *multipart,
                                             const char *preface);</programlisting>
<para>
Sets the preface on the multipart.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>multipart</parameter>&nbsp;:</term>
<listitem><simpara> multipart
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>preface</parameter>&nbsp;:</term>
<listitem><simpara> preface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-multipart-get-preface">g_mime_multipart_get_preface ()</title>
<programlisting>const char* g_mime_multipart_get_preface    (<link linkend="GMimeMultipart">GMimeMultipart</link> *multipart);</programlisting>
<para>
Gets the preface on the multipart.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>multipart</parameter>&nbsp;:</term>
<listitem><simpara> multipart
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>a pointer to the preface string on the multipart.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-multipart-set-postface">g_mime_multipart_set_postface ()</title>
<programlisting>void        g_mime_multipart_set_postface   (<link linkend="GMimeMultipart">GMimeMultipart</link> *multipart,
                                             const char *postface);</programlisting>
<para>
Sets the postface on the multipart.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>multipart</parameter>&nbsp;:</term>
<listitem><simpara> multipart
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>postface</parameter>&nbsp;:</term>
<listitem><simpara> postface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-multipart-get-postface">g_mime_multipart_get_postface ()</title>
<programlisting>const char* g_mime_multipart_get_postface   (<link linkend="GMimeMultipart">GMimeMultipart</link> *multipart);</programlisting>
<para>
Gets the postface on the multipart.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>multipart</parameter>&nbsp;:</term>
<listitem><simpara> multipart
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>a pointer to the postface string on the multipart.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-multipart-set-boundary">g_mime_multipart_set_boundary ()</title>
<programlisting>void        g_mime_multipart_set_boundary   (<link linkend="GMimeMultipart">GMimeMultipart</link> *multipart,
                                             const char *boundary);</programlisting>
<para>
Sets <parameter>boundary</parameter> as the boundary on the multipart. If <parameter>boundary</parameter> is
<literal>NULL</literal>, then a boundary will be auto-generated for you.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>multipart</parameter>&nbsp;:</term>
<listitem><simpara> multipart
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>boundary</parameter>&nbsp;:</term>
<listitem><simpara> boundary or <literal>NULL</literal> to autogenerate one
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-multipart-get-boundary">g_mime_multipart_get_boundary ()</title>
<programlisting>const char* g_mime_multipart_get_boundary   (<link linkend="GMimeMultipart">GMimeMultipart</link> *multipart);</programlisting>
<para>
Gets the boundary on the multipart. If the internal boundary is
<literal>NULL</literal>, then an auto-generated boundary will be set on the multipart
and returned.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>multipart</parameter>&nbsp;:</term>
<listitem><simpara> multipart
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>the boundary on the multipart.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-multipart-add-part">g_mime_multipart_add_part ()</title>
<programlisting>void        g_mime_multipart_add_part       (<link linkend="GMimeMultipart">GMimeMultipart</link> *multipart,
                                             <link linkend="GMimeObject">GMimeObject</link> *part);</programlisting>
<para>
Adds a mime part to the multipart.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>multipart</parameter>&nbsp;:</term>
<listitem><simpara> multipart
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>part</parameter>&nbsp;:</term>
<listitem><simpara> mime part
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-multipart-add-part-at">g_mime_multipart_add_part_at ()</title>
<programlisting>void        g_mime_multipart_add_part_at    (<link linkend="GMimeMultipart">GMimeMultipart</link> *multipart,
                                             <link linkend="GMimeObject">GMimeObject</link> *part,
                                             int index);</programlisting>
<para>
Adds a mime part to the multipart at the position <parameter>index</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>multipart</parameter>&nbsp;:</term>
<listitem><simpara> multipart
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>part</parameter>&nbsp;:</term>
<listitem><simpara> mime part
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>index</parameter>&nbsp;:</term>
<listitem><simpara> position to insert the mime part
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-multipart-get-number">g_mime_multipart_get_number ()</title>
<programlisting>int         g_mime_multipart_get_number     (<link linkend="GMimeMultipart">GMimeMultipart</link> *multipart);</programlisting>
<para>
Gets the number of mime parts contained within the multipart.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>multipart</parameter>&nbsp;:</term>
<listitem><simpara> multipart
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>the number of mime parts contained within the multipart.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-multipart-get-part">g_mime_multipart_get_part ()</title>
<programlisting><link linkend="GMimeObject">GMimeObject</link>* g_mime_multipart_get_part      (<link linkend="GMimeMultipart">GMimeMultipart</link> *multipart,
                                             int index);</programlisting>
<para>
Gets the mime part at position <parameter>index</parameter> within the multipart.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>multipart</parameter>&nbsp;:</term>
<listitem><simpara> multipart
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>index</parameter>&nbsp;:</term>
<listitem><simpara> position of the mime part
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>the mime part at position <parameter>index</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-multipart-remove-part">g_mime_multipart_remove_part ()</title>
<programlisting>void        g_mime_multipart_remove_part    (<link linkend="GMimeMultipart">GMimeMultipart</link> *multipart,
                                             <link linkend="GMimeObject">GMimeObject</link> *part);</programlisting>
<para>
Removes the specified mime part from the multipart.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>multipart</parameter>&nbsp;:</term>
<listitem><simpara> multipart
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>part</parameter>&nbsp;:</term>
<listitem><simpara> mime part
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-multipart-remove-part-at">g_mime_multipart_remove_part_at ()</title>
<programlisting><link linkend="GMimeObject">GMimeObject</link>* g_mime_multipart_remove_part_at
                                            (<link linkend="GMimeMultipart">GMimeMultipart</link> *multipart,
                                             int index);</programlisting>
<para>
Removes the mime part at position <parameter>index</parameter> from the multipart.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>multipart</parameter>&nbsp;:</term>
<listitem><simpara> multipart
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>index</parameter>&nbsp;:</term>
<listitem><simpara> position of the mime part to remove
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>the mime part that was removed.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-multipart-foreach">g_mime_multipart_foreach ()</title>
<programlisting>void        g_mime_multipart_foreach        (<link linkend="GMimeMultipart">GMimeMultipart</link> *multipart,
                                             <link linkend="GMimePartFunc">GMimePartFunc</link> callback,
                                             <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
Calls <parameter>callback</parameter> on <parameter>multipart</parameter> and each of its subparts.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>multipart</parameter>&nbsp;:</term>
<listitem><simpara> a multipart
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&nbsp;:</term>
<listitem><simpara> function to call for <parameter>multipart</parameter> and all of its subparts
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara> extra data to pass to the callback
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-multipart-get-subpart-from-content-id">g_mime_multipart_get_subpart_from_content_id ()</title>
<programlisting>const <link linkend="GMimeObject">GMimeObject</link>* g_mime_multipart_get_subpart_from_content_id
                                            (<link linkend="GMimeMultipart">GMimeMultipart</link> *multipart,
                                             const char *content_id);</programlisting>
<para>
Gets the mime part with the content-id <parameter>content_id</parameter> from the
multipart <parameter>multipart</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>multipart</parameter>&nbsp;:</term>
<listitem><simpara> a multipart
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>content_id</parameter>&nbsp;:</term>
<listitem><simpara> the content id of the part to look for
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>the GMimeObject whose content-id matches the search string,
or <literal>NULL</literal> if a match cannot be found.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
