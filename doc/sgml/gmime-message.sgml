<refentry id="gmime-gmime-message">
<refmeta>
<refentrytitle>gmime-message</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GMIME Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gmime-message</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



#define     <link linkend="GMIME-RECIPIENT-TYPE-TO-CAPS">GMIME_RECIPIENT_TYPE_TO</link>
#define     <link linkend="GMIME-RECIPIENT-TYPE-CC-CAPS">GMIME_RECIPIENT_TYPE_CC</link>
#define     <link linkend="GMIME-RECIPIENT-TYPE-BCC-CAPS">GMIME_RECIPIENT_TYPE_BCC</link>
struct      <link linkend="GMimeMessage">GMimeMessage</link>;
<link linkend="GMimeMessage">GMimeMessage</link>* <link linkend="g-mime-message-new">g_mime_message_new</link>            (<link linkend="gboolean">gboolean</link> pretty_headers);
void        <link linkend="g-mime-message-set-sender">g_mime_message_set_sender</link>       (<link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             const char *sender);
const char* <link linkend="g-mime-message-get-sender">g_mime_message_get_sender</link>       (<link linkend="GMimeMessage">GMimeMessage</link> *message);
void        <link linkend="g-mime-message-set-reply-to">g_mime_message_set_reply_to</link>     (<link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             const char *reply_to);
const char* <link linkend="g-mime-message-get-reply-to">g_mime_message_get_reply_to</link>     (<link linkend="GMimeMessage">GMimeMessage</link> *message);
void        <link linkend="g-mime-message-add-recipient">g_mime_message_add_recipient</link>    (<link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             char *type,
                                             const char *name,
                                             const char *address);
void        <link linkend="g-mime-message-add-recipients-from-string">g_mime_message_add_recipients_from_string</link>
                                            (<link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             char *type,
                                             const char *string);
<link linkend="InternetAddressList">InternetAddressList</link>* <link linkend="g-mime-message-get-recipients">g_mime_message_get_recipients</link>
                                            (<link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             const char *type);
void        <link linkend="g-mime-message-set-subject">g_mime_message_set_subject</link>      (<link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             const char *subject);
const char* <link linkend="g-mime-message-get-subject">g_mime_message_get_subject</link>      (<link linkend="GMimeMessage">GMimeMessage</link> *message);
void        <link linkend="g-mime-message-set-date">g_mime_message_set_date</link>         (<link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             <link linkend="time-t">time_t</link> date,
                                             int gmt_offset);
void        <link linkend="g-mime-message-get-date">g_mime_message_get_date</link>         (<link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             <link linkend="time-t">time_t</link> *date,
                                             int *gmt_offset);
char*       <link linkend="g-mime-message-get-date-string">g_mime_message_get_date_string</link>  (<link linkend="GMimeMessage">GMimeMessage</link> *message);
void        <link linkend="g-mime-message-set-message-id">g_mime_message_set_message_id</link>   (<link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             const char *message_id);
const char* <link linkend="g-mime-message-get-message-id">g_mime_message_get_message_id</link>   (<link linkend="GMimeMessage">GMimeMessage</link> *message);
void        <link linkend="g-mime-message-add-header">g_mime_message_add_header</link>       (<link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             const char *header,
                                             const char *value);
void        <link linkend="g-mime-message-set-header">g_mime_message_set_header</link>       (<link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             const char *header,
                                             const char *value);
const char* <link linkend="g-mime-message-get-header">g_mime_message_get_header</link>       (<link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             const char *header);
void        <link linkend="g-mime-message-set-mime-part">g_mime_message_set_mime_part</link>    (<link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             <link linkend="GMimeObject">GMimeObject</link> *mime_part);
<link linkend="ssize-t">ssize_t</link>     <link linkend="g-mime-message-write-to-stream">g_mime_message_write_to_stream</link>  (<link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             <link linkend="GMimeStream">GMimeStream</link> *stream);
char*       <link linkend="g-mime-message-to-string">g_mime_message_to_string</link>        (<link linkend="GMimeMessage">GMimeMessage</link> *message);
char*       <link linkend="g-mime-message-get-body">g_mime_message_get_body</link>         (const <link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             <link linkend="gboolean">gboolean</link> want_plain,
                                             <link linkend="gboolean">gboolean</link> *is_html);
char*       <link linkend="g-mime-message-get-headers">g_mime_message_get_headers</link>      (<link linkend="GMimeMessage">GMimeMessage</link> *message);
void        <link linkend="g-mime-message-foreach-part">g_mime_message_foreach_part</link>     (<link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             <link linkend="GMimePartFunc">GMimePartFunc</link> callback,
                                             <link linkend="gpointer">gpointer</link> data);


</synopsis>
</refsynopsisdiv>







<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GMIME-RECIPIENT-TYPE-TO-CAPS">GMIME_RECIPIENT_TYPE_TO</title>
<programlisting>#define	GMIME_RECIPIENT_TYPE_TO  "To"
</programlisting>
<para>
Recipients in the To: header.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GMIME-RECIPIENT-TYPE-CC-CAPS">GMIME_RECIPIENT_TYPE_CC</title>
<programlisting>#define	GMIME_RECIPIENT_TYPE_CC  "Cc"
</programlisting>
<para>
Recipients in the Cc: header.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GMIME-RECIPIENT-TYPE-BCC-CAPS">GMIME_RECIPIENT_TYPE_BCC</title>
<programlisting>#define	GMIME_RECIPIENT_TYPE_BCC "Bcc"
</programlisting>
<para>
Recipients in the Bcc: header.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GMimeMessage">struct GMimeMessage</title>
<programlisting>struct GMimeMessage {

	GMimeObject parent_object;
	
	char *from;
	char *reply_to;
	
	GHashTable *recipients;
	
	char *subject;
	
	time_t date;
	int gmt_offset;     /* GMT offset */
	
	char *message_id;
	
	GMimeObject *mime_part;
};
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="g-mime-message-new">g_mime_message_new ()</title>
<programlisting><link linkend="GMimeMessage">GMimeMessage</link>* g_mime_message_new            (<link linkend="gboolean">gboolean</link> pretty_headers);</programlisting>
<para>
If <parameter>pretty_headers</parameter> is <literal>TRUE</literal>, then the standard rfc822 headers are
initialized so as to put headers in a nice friendly order. This is
strictly a cosmetic thing, so if you are unsure, it is safe to say
no (<literal>FALSE</literal>).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>pretty_headers</parameter>&nbsp;:</term>
<listitem><simpara> make pretty headers 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>an empty MIME Message object.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-message-set-sender">g_mime_message_set_sender ()</title>
<programlisting>void        g_mime_message_set_sender       (<link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             const char *sender);</programlisting>
<para>
Set the sender's name and address on the MIME Message.
(ex: "\"Joe Sixpack\" &lt;joe<parameter>sixpack</parameter>.org&gt;")</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> MIME Message to change
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sender</parameter>&nbsp;:</term>
<listitem><simpara> The name and address of the sender
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-message-get-sender">g_mime_message_get_sender ()</title>
<programlisting>const char* g_mime_message_get_sender       (<link linkend="GMimeMessage">GMimeMessage</link> *message);</programlisting>
<para>
Gets the email address of the sender from <parameter>message</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> MIME Message
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>the sender's name and address of the MIME Message.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-message-set-reply-to">g_mime_message_set_reply_to ()</title>
<programlisting>void        g_mime_message_set_reply_to     (<link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             const char *reply_to);</programlisting>
<para>
Set the sender's Reply-To address on the MIME Message.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> MIME Message to change
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>reply_to</parameter>&nbsp;:</term>
<listitem><simpara> The Reply-To address
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-message-get-reply-to">g_mime_message_get_reply_to ()</title>
<programlisting>const char* g_mime_message_get_reply_to     (<link linkend="GMimeMessage">GMimeMessage</link> *message);</programlisting>
<para>
Gets the Reply-To address from <parameter>message</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> MIME Message
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>the sender's Reply-To address from the MIME Message.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-message-add-recipient">g_mime_message_add_recipient ()</title>
<programlisting>void        g_mime_message_add_recipient    (<link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             char *type,
                                             const char *name,
                                             const char *address);</programlisting>
<para>
Add a recipient of a chosen type to the MIME Message. Available
recipient types include: <link linkend="GMIME-RECIPIENT-TYPE-TO-CAPS">GMIME_RECIPIENT_TYPE_TO</link>,
<link linkend="GMIME-RECIPIENT-TYPE-CC-CAPS">GMIME_RECIPIENT_TYPE_CC</link> and <link linkend="GMIME-RECIPIENT-TYPE-BCC-CAPS">GMIME_RECIPIENT_TYPE_BCC</link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> MIME Message to change
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> Recipient type
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara> The recipient's name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>address</parameter>&nbsp;:</term>
<listitem><simpara> The recipient's address
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-message-add-recipients-from-string">g_mime_message_add_recipients_from_string ()</title>
<programlisting>void        g_mime_message_add_recipients_from_string
                                            (<link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             char *type,
                                             const char *string);</programlisting>
<para>
Add a list of recipients of a chosen type to the MIME
Message. Available recipient types include:
<link linkend="GMIME-RECIPIENT-TYPE-TO-CAPS">GMIME_RECIPIENT_TYPE_TO</link>, <link linkend="GMIME-RECIPIENT-TYPE-CC-CAPS">GMIME_RECIPIENT_TYPE_CC</link> and
<link linkend="GMIME-RECIPIENT-TYPE-BCC-CAPS">GMIME_RECIPIENT_TYPE_BCC</link>. The string must be in the format
specified in rfc822.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> MIME Message
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> Recipient type
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>string</parameter>&nbsp;:</term>
<listitem><simpara> A string of recipient names and addresses.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-message-get-recipients">g_mime_message_get_recipients ()</title>
<programlisting><link linkend="InternetAddressList">InternetAddressList</link>* g_mime_message_get_recipients
                                            (<link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             const char *type);</programlisting>
<para>
Gets a list of recipients of type <parameter>type</parameter> from <parameter>message</parameter>. Available
recipient types include: <link linkend="GMIME-RECIPIENT-TYPE-TO-CAPS">GMIME_RECIPIENT_TYPE_TO</link>,
<link linkend="GMIME-RECIPIENT-TYPE-CC-CAPS">GMIME_RECIPIENT_TYPE_CC</link> and <link linkend="GMIME-RECIPIENT-TYPE-BCC-CAPS">GMIME_RECIPIENT_TYPE_BCC</link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> MIME Message
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> Recipient type
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>a list of recipients of a chosen type from the MIME
Message.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-message-set-subject">g_mime_message_set_subject ()</title>
<programlisting>void        g_mime_message_set_subject      (<link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             const char *subject);</programlisting>
<para>
Set the Subject field on a MIME Message.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> MIME Message
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>subject</parameter>&nbsp;:</term>
<listitem><simpara> Subject string
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-message-get-subject">g_mime_message_get_subject ()</title>
<programlisting>const char* g_mime_message_get_subject      (<link linkend="GMimeMessage">GMimeMessage</link> *message);</programlisting>
<para>
Gets the message's subject.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> MIME Message
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>the Subject field on a MIME Message.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-message-set-date">g_mime_message_set_date ()</title>
<programlisting>void        g_mime_message_set_date         (<link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             <link linkend="time-t">time_t</link> date,
                                             int gmt_offset);</programlisting>
<para>
Sets the sent-date on a MIME Message.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> MIME Message
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>date</parameter>&nbsp;:</term>
<listitem><simpara> Sent-date (ex: gotten from time (NULL))
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>gmt_offset</parameter>&nbsp;:</term>
<listitem><simpara> GMT date offset (in +/- hours)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-message-get-date">g_mime_message_get_date ()</title>
<programlisting>void        g_mime_message_get_date         (<link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             <link linkend="time-t">time_t</link> *date,
                                             int *gmt_offset);</programlisting>
<para>
Stores the date in time_t format in <link linkend="date">date</link> and the GMT offset in
<parameter>gmt_offset</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> MIME Message
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>date</parameter>&nbsp;:</term>
<listitem><simpara> Sent-date
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>gmt_offset</parameter>&nbsp;:</term>
<listitem><simpara> GMT date offset (in +/- hours)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-message-get-date-string">g_mime_message_get_date_string ()</title>
<programlisting>char*       g_mime_message_get_date_string  (<link linkend="GMimeMessage">GMimeMessage</link> *message);</programlisting>
<para>
Gets the message's sent date in string format.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> MIME Message
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>the sent-date of the MIME Message in string format.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-message-set-message-id">g_mime_message_set_message_id ()</title>
<programlisting>void        g_mime_message_set_message_id   (<link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             const char *message_id);</programlisting>
<para>
Set the Message-Id on a message.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> MIME Message
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>message_id</parameter>&nbsp;:</term>
<listitem><simpara> message-id (addr-spec portion)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-message-get-message-id">g_mime_message_get_message_id ()</title>
<programlisting>const char* g_mime_message_get_message_id   (<link linkend="GMimeMessage">GMimeMessage</link> *message);</programlisting>
<para>
Gets the Message-Id header of <parameter>message</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> MIME Message
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>the Message-Id of a message.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-message-add-header">g_mime_message_add_header ()</title>
<programlisting>void        g_mime_message_add_header       (<link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             const char *header,
                                             const char *value);</programlisting>
<para>
Add an arbitrary message header to the MIME Message such as X-Mailer,
X-Priority, or In-Reply-To.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> MIME Message
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>header</parameter>&nbsp;:</term>
<listitem><simpara> rfc822 header field
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara> the contents of the header field
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-message-set-header">g_mime_message_set_header ()</title>
<programlisting>void        g_mime_message_set_header       (<link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             const char *header,
                                             const char *value);</programlisting>
<para>
Set an arbitrary message header to the MIME Message such as X-Mailer,
X-Priority, or In-Reply-To.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> MIME Message
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>header</parameter>&nbsp;:</term>
<listitem><simpara> rfc822 header field
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara> the contents of the header field
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-message-get-header">g_mime_message_get_header ()</title>
<programlisting>const char* g_mime_message_get_header       (<link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             const char *header);</programlisting>
<para>
Gets the value of the requested header <parameter>header</parameter> if it exists, or
<literal>NULL</literal> otherwise.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> MIME Message
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>header</parameter>&nbsp;:</term>
<listitem><simpara> rfc822 header field
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>the value of the requested header (or <literal>NULL</literal> if it isn't set)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-message-set-mime-part">g_mime_message_set_mime_part ()</title>
<programlisting>void        g_mime_message_set_mime_part    (<link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             <link linkend="GMimeObject">GMimeObject</link> *mime_part);</programlisting>
<para>
Set the root-level MIME part of the message.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> MIME Message
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>mime_part</parameter>&nbsp;:</term>
<listitem><simpara> The root-level MIME Part
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-message-write-to-stream">g_mime_message_write_to_stream ()</title>
<programlisting><link linkend="ssize-t">ssize_t</link>     g_mime_message_write_to_stream  (<link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             <link linkend="GMimeStream">GMimeStream</link> *stream);</programlisting>
<para>
Write the contents of the MIME Message to <parameter>stream</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> MIME Message
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stream</parameter>&nbsp;:</term>
<listitem><simpara> output stream
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>-1 on fail.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-message-to-string">g_mime_message_to_string ()</title>
<programlisting>char*       g_mime_message_to_string        (<link linkend="GMimeMessage">GMimeMessage</link> *message);</programlisting>
<para>
Allocates a string buffer containing the mime message <parameter>message</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> MIME Message
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>an allocated string containing the MIME Message.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-message-get-body">g_mime_message_get_body ()</title>
<programlisting>char*       g_mime_message_get_body         (const <link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             <link linkend="gboolean">gboolean</link> want_plain,
                                             <link linkend="gboolean">gboolean</link> *is_html);</programlisting>
<para>
Attempts to get the body of the message in the preferred format
specified by <parameter>want_plain</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> MIME Message
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>want_plain</parameter>&nbsp;:</term>
<listitem><simpara> request text/plain
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>is_html</parameter>&nbsp;:</term>
<listitem><simpara> body returned is in html format
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>the prefered form of the message body. Sets the value of
<parameter>is_html</parameter> to <literal>TRUE</literal> if the part returned is in HTML format, otherwise
<literal>FALSE</literal>.

Note: This function is NOT guarenteed to always work as it
makes some assumptions that are not necessarily true. It is
recommended that you traverse the MIME structure yourself.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-message-get-headers">g_mime_message_get_headers ()</title>
<programlisting>char*       g_mime_message_get_headers      (<link linkend="GMimeMessage">GMimeMessage</link> *message);</programlisting>
<para>
Allocates a string buffer containing the raw message headers.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> MIME Message
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>an allocated string containing the raw message headers.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-message-foreach-part">g_mime_message_foreach_part ()</title>
<programlisting>void        g_mime_message_foreach_part     (<link linkend="GMimeMessage">GMimeMessage</link> *message,
                                             <link linkend="GMimePartFunc">GMimePartFunc</link> callback,
                                             <link linkend="gpointer">gpointer</link> data);</programlisting>
<para>
Calls <parameter>callback</parameter> on each of the mime parts in the mime message.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> MIME message
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&nbsp;:</term>
<listitem><simpara> function to call on each of the mime parts contained by the mime message
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> extra data to pass to the callback
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
