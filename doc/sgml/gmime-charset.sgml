<refentry id="gmime-gmime-charset">
<refmeta>
<refentrytitle>gmime-charset</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GMIME Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gmime-charset</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



void        <link linkend="g-mime-charset-map-init">g_mime_charset_map_init</link>         (void);
const char* <link linkend="g-mime-charset-locale-name">g_mime_charset_locale_name</link>      (void);
const char* <link linkend="g-mime-charset-name">g_mime_charset_name</link>             (const char *charset);
void        <link linkend="g-mime-charset-init">g_mime_charset_init</link>             (<link linkend="GMimeCharset">GMimeCharset</link> *charset);
void        <link linkend="g-mime-charset-step">g_mime_charset_step</link>             (<link linkend="GMimeCharset">GMimeCharset</link> *charset,
                                             const char *in,
                                             <link linkend="size-t">size_t</link> len);
const char* <link linkend="g-mime-charset-best-name">g_mime_charset_best_name</link>        (<link linkend="GMimeCharset">GMimeCharset</link> *charset);
const char* <link linkend="g-mime-charset-best">g_mime_charset_best</link>             (const char *in,
                                             <link linkend="size-t">size_t</link> inlen);
</synopsis>
</refsynopsisdiv>







<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="g-mime-charset-map-init">g_mime_charset_map_init ()</title>
<programlisting>void        g_mime_charset_map_init         (void);</programlisting>
<para>
Initializes the locale charset variable for later calls to
gmime_charset_locale_name. Only really needs to be called for non-
iso-8859-1 locales.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="g-mime-charset-locale-name">g_mime_charset_locale_name ()</title>
<programlisting>const char* g_mime_charset_locale_name      (void);</programlisting>
<para>
Gets the user's locale charset (or iso-8859-1 by default).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><para>the user's locale charset (or iso-8859-1 by default).
</para></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-charset-name">g_mime_charset_name ()</title>
<programlisting>const char* g_mime_charset_name             (const char *charset);</programlisting>
<para>
Attempts to find an iconv-friendly charset name for <parameter>charset</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>charset</parameter>&nbsp;:</term>
<listitem><para> charset name
</para></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><para>an iconv-friendly charset name for <parameter>charset</parameter>.
</para></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-charset-init">g_mime_charset_init ()</title>
<programlisting>void        g_mime_charset_init             (<link linkend="GMimeCharset">GMimeCharset</link> *charset);</programlisting>
<para>
Initializes a charset mask structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>charset</parameter>&nbsp;:</term>
<listitem><para> charset mask
</para></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-charset-step">g_mime_charset_step ()</title>
<programlisting>void        g_mime_charset_step             (<link linkend="GMimeCharset">GMimeCharset</link> *charset,
                                             const char *in,
                                             <link linkend="size-t">size_t</link> len);</programlisting>
<para>
Steps through the input buffer 1 unicode character (glyph) at a
time (ie, not necessarily 1 byte at a time). Bitwise 'and' our
<parameter>charset</parameter>-&gt;mask with the mask for each glyph. This has the effect of
limiting what charsets our <parameter>charset</parameter>-&gt;mask can match.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>charset</parameter>&nbsp;:</term>
<listitem><para>
</para></listitem></varlistentry>
<varlistentry><term><parameter>in</parameter>&nbsp;:</term>
<listitem><para> input text buffer (must be in UTF-8)
</para></listitem></varlistentry>
<varlistentry><term><parameter>len</parameter>&nbsp;:</term>
<listitem><para> input buffer length
</para></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-charset-best-name">g_mime_charset_best_name ()</title>
<programlisting>const char* g_mime_charset_best_name        (<link linkend="GMimeCharset">GMimeCharset</link> *charset);</programlisting>
<para>
Gets the best charset name based on the charset mask <parameter>charset</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>charset</parameter>&nbsp;:</term>
<listitem><para> charset mask
</para></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><para>a pointer to a string containing the best charset name that
can represent the charset mask <parameter>charset</parameter>.
</para></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-charset-best">g_mime_charset_best ()</title>
<programlisting>const char* g_mime_charset_best             (const char *in,
                                             <link linkend="size-t">size_t</link> inlen);</programlisting>
<para>
Computes the best charset to use to encode this text buffer.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>in</parameter>&nbsp;:</term>
<listitem><para> a UTF-8 text buffer
</para></listitem></varlistentry>
<varlistentry><term><parameter>inlen</parameter>&nbsp;:</term>
<listitem><para> length of <parameter>in</parameter>
</para></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><para>the charset name best suited for the input text or <literal>NULL</literal> if
it is US-ASCII safe.
</para></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
