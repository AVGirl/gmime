<refentry id="gmime-gmime-multipart-signed">
<refmeta>
<refentrytitle>gmime-multipart-signed</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GMIME Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gmime-multipart-signed</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



struct      <link linkend="GMimeMultipartSigned">GMimeMultipartSigned</link>;
<link linkend="GMimeMultipartSigned">GMimeMultipartSigned</link>* <link linkend="g-mime-multipart-signed-new">g_mime_multipart_signed_new</link>
                                            (void);
int         <link linkend="g-mime-multipart-signed-sign">g_mime_multipart_signed_sign</link>    (<link linkend="GMimeMultipartSigned">GMimeMultipartSigned</link> *mps,
                                             <link linkend="GMimeObject">GMimeObject</link> *content,
                                             <link linkend="GMimeCipherContext">GMimeCipherContext</link> *ctx,
                                             const char *userid,
                                             <link linkend="GMimeCipherHash">GMimeCipherHash</link> hash,
                                             <link linkend="GError">GError</link> **err);
<link linkend="GMimeCipherValidity">GMimeCipherValidity</link>* <link linkend="g-mime-multipart-signed-verify">g_mime_multipart_signed_verify</link>
                                            (<link linkend="GMimeMultipartSigned">GMimeMultipartSigned</link> *mps,
                                             <link linkend="GMimeCipherContext">GMimeCipherContext</link> *ctx,
                                             <link linkend="GError">GError</link> **err);


</synopsis>
</refsynopsisdiv>







<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GMimeMultipartSigned">struct GMimeMultipartSigned</title>
<programlisting>struct GMimeMultipartSigned {
	GMimeMultipart parent_object;
	
	char *protocol;
	char *micalg;
};
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="g-mime-multipart-signed-new">g_mime_multipart_signed_new ()</title>
<programlisting><link linkend="GMimeMultipartSigned">GMimeMultipartSigned</link>* g_mime_multipart_signed_new
                                            (void);</programlisting>
<para>
Creates a new MIME multipart/signed object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><para>an empty MIME multipart/signed object.
</para></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-multipart-signed-sign">g_mime_multipart_signed_sign ()</title>
<programlisting>int         g_mime_multipart_signed_sign    (<link linkend="GMimeMultipartSigned">GMimeMultipartSigned</link> *mps,
                                             <link linkend="GMimeObject">GMimeObject</link> *content,
                                             <link linkend="GMimeCipherContext">GMimeCipherContext</link> *ctx,
                                             const char *userid,
                                             <link linkend="GMimeCipherHash">GMimeCipherHash</link> hash,
                                             <link linkend="GError">GError</link> **err);</programlisting>
<para>
Attempts to sign the <parameter>content</parameter> MIME part with <parameter>userid</parameter>'s private key
using the <parameter>ctx</parameter> signing context with the <parameter>hash</parameter> algorithm. If
successful, the signed <link linkend="GMimeObject">GMimeObject</link> is set as the signed part of
the multipart/signed object <parameter>mps</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>mps</parameter>&nbsp;:</term>
<listitem><para> multipart/signed object
</para></listitem></varlistentry>
<varlistentry><term><parameter>content</parameter>&nbsp;:</term>
<listitem><para> MIME part to sign
</para></listitem></varlistentry>
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><para> encryption cipher context
</para></listitem></varlistentry>
<varlistentry><term><parameter>userid</parameter>&nbsp;:</term>
<listitem><para> user id to sign with
</para></listitem></varlistentry>
<varlistentry><term><parameter>hash</parameter>&nbsp;:</term>
<listitem><para> preferred digest algorithm
</para></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><para> exception
</para></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><para>0 on success or -1 on fail. If the signing fails, an
exception will be set on <parameter>err</parameter> to provide information as to why the
failure occured.
</para></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mime-multipart-signed-verify">g_mime_multipart_signed_verify ()</title>
<programlisting><link linkend="GMimeCipherValidity">GMimeCipherValidity</link>* g_mime_multipart_signed_verify
                                            (<link linkend="GMimeMultipartSigned">GMimeMultipartSigned</link> *mps,
                                             <link linkend="GMimeCipherContext">GMimeCipherContext</link> *ctx,
                                             <link linkend="GError">GError</link> **err);</programlisting>
<para>
Attempts to verify the signed MIME part contained within the
multipart/signed object <parameter>mps</parameter> using the <parameter>ctx</parameter> cipher context.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>mps</parameter>&nbsp;:</term>
<listitem><para> multipart/signed object
</para></listitem></varlistentry>
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><para> encryption cipher context
</para></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><para> exception
</para></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><para>a new <link linkend="GMimeCipherValidity">GMimeCipherValidity</link> object on success or <literal>NULL</literal> on
fail. If the signing fails, an exception will be set on <parameter>err</parameter> to
provide information as to why the failure occured.
</para></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
