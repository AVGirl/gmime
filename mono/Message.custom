public enum RecipientType {
	To,
	Cc,
	Bcc
};

[DllImport ("gmime")]
static extern IntPtr g_mime_message_get_recipients (IntPtr raw, string type);

public ICollection GetRecipients (RecipientType type)
{
	IntPtr raw_ret = g_mime_message_get_recipients (Handle, type.ToString ());

	if (raw_ret == IntPtr.Zero)
		return null;

	return new InternetAddress.InternetAddressList (raw_ret);
}

[DllImport("gmime")]
static extern IntPtr internet_address_list_get_address (IntPtr raw);

[DllImport("gmime")]
static extern IntPtr internet_address_to_string(IntPtr raw, bool encode);

[DllImport("gmime")]
static extern IntPtr internet_address_list_next (IntPtr raw);

public string GetRecipientsAsString (RecipientType type, bool encode)
{
	IntPtr raw_list = g_mime_message_get_recipients (Handle, type.ToString ());

	if (raw_list == IntPtr.Zero)
		return null;

	System.Text.StringBuilder sb = new System.Text.StringBuilder ();
	bool first = true;

	while (raw_list != IntPtr.Zero) {
		IntPtr raw_ia = internet_address_list_get_address (raw_list);
		IntPtr raw_str = internet_address_to_string (raw_ia, encode);

		if (!first)
			sb.Append (", ");
		else
			first = false;


		sb.Append (GLib.Marshaller.PtrToStringGFree (raw_str));

		raw_list = internet_address_list_next (raw_list);
	}

	return sb.ToString ();
}

public string GetRecipientsAsString (RecipientType type)
{
	return this.GetRecipientsAsString (type, false);
}

[DllImport("gmime")]
static extern void g_mime_message_get_date (IntPtr raw, out IntPtr date, out int gmt_offset);

public DateTime Date {
	get {
		IntPtr date_raw;
		int gmt_offset;

		g_mime_message_get_date (Handle, out date_raw, out gmt_offset);

		return GLib.Marshaller.time_tToDateTime (date_raw);
	}
}