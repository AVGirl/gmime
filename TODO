The following is a list of known places for possible improvement to
the GMime library. This list of tasks in no way indicates priority,
that is to say that there is no rhyme or reason to the order that the
tasks are presented in.

GMime 2.8 / 3.0 Planning:
=========================

- Drop GMime-Sharp support? Not sure it's worth maintaining now that
  I've written MimeKit which will always be a far nicer .NET API
  than I could make GMime-Sharp.

- Drop the use of GMimeHeaderList's stream cache and instead solve
  this problem by using a per-header cache of the original raw value.

- Kill off GMimeHeaderIter - that API sucks. Let's provide an
  index-based accessor for particular GMimeHeaders in GMimeHeaderList.
  Something like g_mime_header_list_get_header_at(int index).

- Fix g_mime_message_[g,s]set_sender() to take/return an
  InternetAddressList to be more consistent with the recipient
  functions as well as being less error-prone.

- Fix g_mime_message_[g,s]et_reply_to() to take/return an
  InternetAddressList to be more consistent with the recipient
  functions as well as being less error-prone.

- Modify GMimeStream APIs to take GCancellable and GError arguments.

- Modify g_mime_parser_construct_message() and
  g_mime_parser_construct_part() methods take GCancellable and GError
  arguments?

- Bump the Glib dependency and just use the newer GMutex APIs
  directly.

- How about a g_mime_part_get_best_charset()? This one could be
  awkward since it depends on the content being text and also encoded
  in UTF-8... [ CONSIDERING ]

- Modify header encoder methods to take a charset parameter (NULL for
  default?) so that users can force gmime to encode with a specific
  charset.

- GMimeParserOptions like MimeKit's ParserOptions??

- Combine GMimeGpgContext and GMimePkcs7Context by using GpgMe for
  both. This could allow g_mime_multipart_encrypted_decrypt() and
  g_mime_multipart_signed_verify() to set the appropriate protocol on
  the CryptoContext so that the caller wouldn't have to figure that
  out themselves. We'd actually be able to get rid of the need for
  a GMimeCryptoContext parameter altogether if we could rely on
  the backend using a gpg-agent for password requests.


All questions and comments should be directed toward the author,
Jeffrey Stedfast <fejj@gnome.org>
