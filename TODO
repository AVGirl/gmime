The following is a list of known places for possible improvement to
the GMime library. This list of tasks in no way indicates priority,
that is to say that there is no rhyme or reason to the order that the
tasks are presented in.



- rfc2047 encode parameters in the MIME Content fields where
appropriate. This means we can't always wrap parameter values in
quotes (it is illegal to quote rfc2047 encoded atoms).
** I think this is fixed now.

- Should only quote parameter values when required (ie when they
contain whitespace, semicolons, or other illegal chars).

- Expand InternetAddress to correctly handle rfc0822 address 'groups'
(Are these even in use still?).

- Possibly make the GMime parser async.

- Write a broken date parser. (job for lex/bison?)


FIXME's:

- The rfc2047 encoder should watch white space and encode it if it
appears between two atoms that will be encoded. For example, it
currently performs in the following manner:

(pretend 'a' and 'b' need to be encoded)
original text: a b
encoded (currently): =?iso-8859-1?Q?a?= =?iso-8859-1?Q?b?=
encoded (correctly): =?iso-8859-1?Q?a?= =?iso-8859-1?Q?_b?=
encoded (correctly): =?iso-8859-1?Q?a_?= =?iso-8859-1?Q?b?=
encoded (correctly): =?iso-8859-1?Q?a?= =?iso-8859-1?Q?_?= =?iso-8859-1?Q?b?=

After deocding, the first equates to: ab 
This is incorrect, the RFC specifies that whitespace between 
encoded atoms be ignored.

- Parsing quoted strings needs to be smarter - need to check for
escaped quotes and such.
** This should be fixed now.

- InternetAddress needs to be smarter about quoting an address - what
if the name component of the address has embedded quotes? They need to
be escaped.
** I think this is fixed now.

All questions and comments should be directed toward the author,
Jeffrey Stedfast <fejj@helixcode.com>
