2000-12-13  Jeffrey Stedfast  <fejj@helixcode.com>

	* doc/sgml/*:
	* doc/html/*:
	* doc/gmime-sections.txt: Updated.

	* README: Updated version line to 0.3.0

2000-12-12  Jeffrey Stedfast  <fejj@helixcode.com>

	* gmime-part.c (g_mime_part_to_string): Wrap some content-*
	headers that might sometimes be long.

	* gmime-message.c (create_header): Updated to reflect function
	name changes/moves.

	* gmime-utils.c (g_mime_utils_header_printf): Moved here from
	gmime-message.c and slightly renamed ;-)
	(g_mime_utils_header_fold): Moved from being private to being
	public.

2000-12-12  Jeffrey Stedfast  <fejj@helixcode.com>

	* gmime-part.c: Hmmm, why weren't multiparts using the internal
	get_content_type function rather than ...content_type_to_string?
	Possible FIXME: Should content_type_to_string do what
	get_content_type does? or should it remain untouched and just
	return "type/subtype"?

	* gmime-part.h: No more boundary data member.

	* gmime-part.c (g_mime_part_get_boundary): Updated, as we no
	longer store the boundary on the MIME Part and instead only on the
	content-type (where it belongs).
	(g_mime_part_set_boundary): And here too.
	(g_mime_part_destroy): No longer need to destroy the boundary.

2000-12-11  Jeffrey Stedfast  <fejj@helixcode.com>

	* gmime-part.c (g_mime_part_get_subpart_from_content_id): Erm,
	smack me. This needs to be recursive (this is what happens when I
	code really late at night).

2000-12-11  Jeffrey Stedfast  <fejj@helixcode.com>

	* configure.in (GMIME_MINOR_VERSION): Updated to 0.3.0

	* gmime-parser.c (get_mime_part): Updated to reflect the
	add_subpart API change.

	* test-mime.c (test_multipart): And here too.

	* gmime-part.h (g_mime_part_add_child): Macro added for backward
	source compatability.

	* gmime-part.c (g_mime_part_get_subpart_from_content_id): Renamed
	from g_mime_part_get_child_from_content_id as I think I'm gonna
	start calling them subparts in the API as it's a bit clearer than
	calling them children. Also fixed up some of the logic (what if
	the parent mime part had a content-id? The way the code was before
	it'd never search the subparts). Oh, it also returns const now.
	(g_mime_part_add_subpart): Renamed from g_mime_part_add_child and
	also now does some error checking to make sure the parent part is
	a multipart.

2000-12-10  Charles Kerr <charles@superpimp.org>

	* gmime-part.c (g_mime_part_get_child_by_content_id): new
	utility function.

2000-12-09  Jeffrey Stedfast  <fejj@helixcode.com>

	* gmime-part.c (g_mime_part_set_boundary): Generate a random
	boundary if passed boundary is NULL.

2000-12-07  Jeffrey Stedfast  <fejj@helixcode.com>

	* gmime-message.c (multipart_get_body): Traverses a MIME Part and
	'always' extracts the body assuming it exists. Extracts the
	preffered text type if it exists, otherwise returns the type less
	preferred.
	(g_mime_message_get_body): Use multipart_get_body if the toplevel
	part is a multipart.

2000-12-05  Jeffrey Stedfast  <fejj@helixcode.com>

	* README: Updated with more RFCs, etc.

	* rfc/* Added a bunch more rfcs of interest.

2000-12-04  Jeffrey Stedfast  <fejj@helixcode.com>

	* test-mime.c: Added test code for the address parser.

	* gmime-utils.c (g_mime_utils_quoted_encode_step): Updated. No
	longer need to special-case whitespace chars as they have been put
	into the gmime_special_table (a while ago).

2000-12-02  Jeffrey Stedfast  <fejj@helixcode.com>

	* Makefile.am: Install gmime.m4

	* gmime.m4: Added.

2000-12-02  Jeffrey Stedfast  <fejj@helixcode.com>

	* gmime-part.c (g_mime_part_foreach): New convenience function for
	manipulating each subpart of a mime part.

	* gmime-message.c (g_mime_message_foreach_part): New convenience
	function for manipulating all mime parts of a message.

2000-12-02  Jeffrey Stedfast  <fejj@helixcode.com>

	* doc/sgml/*:
	* doc/html/*: Updated.

	* doc/gmime-sections.txt: Add g_mime_message_[g,s]et_message_id.

	* gmime-parser.c (construct_headers): Parse out Message-Id
	headers.

	* gmime-message.c (g_mime_message_destroy): Free the message id.
	(g_mime_message_set_message_id): New function to set the message
	id on a message.
	(g_mime_message_set_message_id): New accessor function for
	message-ids.
	(create_header): Write out the Message-Id if and only if it
	exists.

2000-11-29  Jeffrey Stedfast  <fejj@helixcode.com>

	* README: Updated.

	* doc/gmime-sections.txt: Added new functions.

	* doc/html/*: Updated.

2000-11-29  Jeffrey Stedfast  <fejj@helixcode.com>

	* configure.in: Bumped the version to 0.2.0 because the API has
	changed a bit.

	* test-parser.c:
	* test-mime.c: Updated.

	* gmime-utils.c (BASE64_ENCODE_LEN):
	(QP_ENCODE_LEN): Macros for determining how much space we need to
	encode a chunk of data to that encoding (estimate is liberal).
	(encode_8bit_word): Use the macros to determine the length we
	need.

	* gmime-message.c (g_mime_message_get_body): Updated to reflect
	changes to gmime-part.

	* gmime-parser.c (get_mime_part): Updated.

	* gmime-part.c (g_mime_part_set_content): Now takes a len argument
	and has been updated to reflect the move to GByteArray.
	(g_mime_part_destroy): Updated.
	(g_mime_part_set_pre_encoded_content): New convenience function to
	decode pre-encoded content and set it on the mime part.
	(g_mime_part_get_content): Renamed from
	g_mime_part_decode_contents.

	* gmime-part.h: GMimePart->content is now a GByteArray that will
	hold the raw content (in it's unencoded form).

2000-11-28  Jeffrey Stedfast  <fejj@helixcode.com>

	* gmime-content-type.c (g_mime_content_type_new_from_string):
	Ignore extranious semicolons between parameters. Handle the event
	where the content-type doesn't specify a subtype (this is broken
	but some mailers will send "Content-Type: text" for example).
	(g_mime_content_type_new): If there isn't a type or subtype, print
	a warning and try to do some smart defaulting action.

	* gmime-message.c (handle_multipart_alternative): Only remember
	the last subpart if it was a text part.

2000-11-19  Jeffrey Stedfast  <fejj@helixcode.com>

	* doc/html/*:
	* doc/sgml/*: Updated.

	* test-mime.c: Updated.

	* gmime-utils.c (g_mime_utils_quote_string): Do the detection on
	whether or not to wrap the string in quotes here rather than
	requiring a boolean argument specifying whether the string should
	be quoted. RFC2045 provides us with a list of characters that are
	not safe.

	* gmime-param.c (g_mime_param_to_string): Updated to reflect
	changes to g_mime_utils_quote_string. This function is the main
	reason for the change - parameter values should really only be
	quoted if they have to be else they should remain unquoted.

	* internet-address.c (encoded_name): Updated to reflect changes to
	g_mime_utils_quote_string.

2000-11-19  Jeffrey Stedfast  <fejj@helixcode.com>

	* TODO: Updated.

	* gmime-utils.c: Updated gmime_special_table.
	(g_mime_utils_8bit_header_encode): Since rfc2047 states that all
	whitespace between encoded atoms must be ignored, the encoder
	should therefor make an effort to encode whitespace when it falls
	between two atoms that will be encoded. Use the IS_ESAFE mask.
	(quoted_encode): Now takes a safemask argument to specify which
	chars are safe to leave unencoded and also a arg to save whether
	or not the word was encoded.
	(g_mime_utils_8bit_header_encode_phrase): Updated to use the
	IS_PSAFE mask.

2000-11-19  Jeffrey Stedfast  <fejj@helixcode.com>

	* gmime-parser.c (header_unfold): New function to unfold a header
	(to be used internally).
	(construct_headers): Unfold headers as we parse them.

	* configure.in: Changed version to 0.1.1.

	* gmime-part.c (get_content_disposition): Append a ";" before
	appending any parameters even when there is no disposition
	text. Also only enter into the param loop if there exist params.

2000-11-16  Jeffrey Stedfast  <fejj@helixcode.com>

	* doc/sgml/*: Added.
	
	* doc/gmime-sections.txt: Added g_mime_part_decode_contents and
	g_mime_header_printf.

	* gmime-message.c (header_fold): New function to fold headers.
	(g_mime_header_printf): New convenience function to print a
	formatted header (which will get correctly folded).
	(create_header): Correctly fold each header.

2000-11-16  Charles Kerr <charles@superpimp.org>

	* gmime-utils.c (datetok): don't crash if the date string passed
	in is NULL.

2000-11-15  Jeffrey Stedfast  <fejj@helixcode.com>

	* gmime-part.c (g_mime_part_decode_contents): New convenience
	function to decode the contents of a mime part (based on code by
	Wayne Schuller).

2000-11-14  Jeffrey Stedfast  <fejj@helixcode.com>

	* doc/html/index.sgml: Added - apparently we need this :-)

	* doc/Makefile.am: Updated to pass distcheck

2000-11-10  Jeffrey Stedfast  <fejj@helixcode.com>

	* doc/gmime-docs.sgml: Added a new paragraph explaining the
	difference between functions that return const and the ones that
	don't.
	
	* doc/html/*.html: Updated.

	* gmime-message.c: 
	* gmime-part.c: 
	* gmime-parser.c: 
	* internet-address.c: 
	* gmime-param.c: Updated Gtk-Doc comments.

	* gmime-content-type.c: Wrote Gtk-Doc comments.

2000-11-10  Jeffrey Stedfast  <fejj@helixcode.com>
	
	* Makefile.am (SUBDIRS): Added doc

	* configure.in: Generate doc/Makefile

	* doc/Makefile.am: Ignore more headers when performaing
	gtkdoc-scan.

	* doc/gmime-docs.sgml:
	* doc/gmime-sections.txt: Added.

	* doc/html/*.html: Generated library reference.

2000-11-09  Jeffrey Stedfast  <fejj@helixcode.com>

	* TODO: Updated.

	* test-mime.c: Added test of the new quote/unquote functions.
	
	* gmime-message.c (g_mime_message_add_recipients_from_string):
	Check for escaped quotes.
	
	* gmime-part.c (get_content_type): Correctly quote params.
	(get_content_disposition): Same.

	* gmime-param.c (g_mime_param_new_from_string): Check for escaped
	quotes. Also use unquote_string() to unquote the value.
	(g_mime_param_to_string): Correctly quote the value.

	* gmime-parser.c (get_mime_part): Check for escaped quotes and
	correctly unquote strings where appropriate.

	* gmime-utils.c (g_mime_utils_quote_string): New convenience
	function to escape and quote a string.
	(g_mime_utils_unquote_string): New convenience function to
	un-escape and un-quote a string.

	* internet-address.c (encoded_name): Use quote_string().
	(internet_address_new): Use unquote_string() to unquote and
	unescape the name component (it will be re-escaped and re-quoted
	when it's written to a string later).

2000-11-09  Jeffrey Stedfast  <fejj@helixcode.com>

	* TODO: Updated.

2000-11-08  Jeffrey Stedfast  <fejj@helixcode.com>

	* gmime-parser.c (construct_headers): Oops. Set the subject with
	the decoded string rather than the encoded one.
	(get_mime_part): On the chance that we come accross a broken
	multipart, default the mime type to text/plain and continue on.

2000-11-08  Jeffrey Stedfast  <fejj@helixcode.com>

	* internet-address.c (internet_address_to_string): Moved code
	around to avoid unecessary warnings.

	* gmime-utils.c: Added Gtk-Doc style comments to all the
	functions.
	(g_mime_utils_best_encoding): Return a GMimePartEncodingType
	instead of gint.

2000-11-01  Jeffrey Stedfast  <fejj@helixcode.com>

	* Makefile.am (INCLUDES): Add -DG_LOG_DOMAIN=\"gmime\"

2000-10-31  Jeffrey Stedfast  <fejj@helixcode.com>

	* test-parser.c (test_parser): Test g_mime_message_get_body() here
	as well.

	* test-mime.c: Updated to reflect changes to get_body.
	
	* gmime-message.c (g_mime_message_get_body): Return an allocated
	buffer because we want to return the decoded message body rather
	than the (possibly) encoded form.
	(create_header): Write out the arbitrary headers first as they may
	contain headers like "Received:" which really ought to be at the
	top.

	* gmime-part.c: Removed some old cruft.

2000-10-29  Jeffrey Stedfast  <fejj@helixcode.com>

	* internet-address.c (encoded_name): Use
	g_mime_utils_8bit_header_encode_phrase() to encode the addrspec.

	* gmime-utils.c (g_mime_utils_8bit_header_decode): Fix to make the
	decoder more rfc compliant. As stated by rfc2047, all white space
	between encoded words MUST be ignored.
	(g_mime_utils_8bit_header_encode_phrase): New rfc2047 encoding
	function for phrases (see rfc2047 section 5 part 3).

2000-10-28  Jeffrey Stedfast  <fejj@helixcode.com>

	* gmime-utils.c (parse_rfc822_date): Fixed the off-by-one-hour
	bug.

	* test-mime.c: Updated to reflect changes to
	g_mime_message_get_body().

	* gmime-message.c (g_mime_message_get_headers): Added Gtk-Doc
	comment.
	(g_mime_message_get_body): Modified to return a const pointer to
	the message body rather than allocating it.

2000-10-28  Charles Kerr <charles@superpimp.org>

	* gmime-message.c (g_mime_message_get_headers): New function
	similar to g_mime_message_get_body.  Useful if you want a raw
	display of headers separate from the body.

	* gmime-message.[c,h] (g_mime_message_get_body): made const.

2000-10-28  Jeffrey Stedfast  <fejj@helixcode.com>

	* tests/Makefile.am: New automake file (when we make a release,
	this directory should really be a part of the tarball as it
	contains data for the test programs).

	* tests/.cvsignore: Added.

	* Makefile.am (SUBDIRS): Add the 'tests' directory

	* configure.in: Generate tests/Makefile

2000-10-27  Jeffrey Stedfast  <fejj@helixcode.com>

	* test-mime.c: Added code to test g_mime_message_get_body()

	* gmime-message.c (g_mime_message_get_body): New convenience
	function that attempts to get the message body in the requested
	text format (plain vs html).

	* gmime-parser.c (construct_headers): If the end of a header field
	is the end of the header, break out of the loop.

	* gmime-content-type.[c,h]: Added const to arguments where
	appropriate.

	* gmime-utils.h: Fixed a spelling mistake in a comment ;-)

2000-10-26  Charles Kerr <charles@superpimp.org>

	* gmime-utils.h: made const the input ptrs for encode/decode
	funcs.

	* gmime-utils.c: Updated to reflect const changes.

2000-10-26  Jeffrey Stedfast  <fejj@helixcode.com>

	* test-mime.c: Also updated.

	* gmime-parser.c (construct_headers): Updated to reflect name
	changes.

	* gmime-message.c: Updated to reflect name changes.

	* gmime-message.h: Changed the name of the recipient type
	#defines.

2000-10-24  Jeffrey Stedfast <fejj@helixcode.com>

	* Makefile.am (SUBDIRS): Added "."

	* configure.in: Create libgmime.spec

2000-10-24  Charles Kerr <charles@superpimp.org>

	* gmime-utils.c: added #include <stdlib.h> to pick up atoi.

	* internet-address.c (internet_address_new): removed unused
	variable `decoded'

2000-10-24  Jeffrey Stedfast  <fejj@helixcode.com>

	Thanks to Charles Kerr of Pan fame for the following fixes.

	* gmime-utils.c (encode_8bit_word): Oops, encode 'word' and not 'ptr'.

	* gmime-part.c (g_mime_part_destroy): Free the content-id.

2000-10-21  Jeffrey Stedfast  <fejj@helixcode.com>

	* gmime.h.in: Wrap definitions in #ifndef __GMIME_H__

2000-10-18  Jeffrey Stedfast  <fejj@helixcode.com>

	* TODO: Updated.

	* test-*.c: Updated to reflect GMime API changes.

	* gmime-part.c: #include "gmime-utils.h"

	* gmime-parser.c (g_mime_parser_construct_message): Now takes a
	boolean argument 'save_extra_headers' which tells the parser
	whether it should add unknown headers to the arbitrary header
	array or ignore them.
	(construct_headers): Save the extra headers if desired.

	* gmime-message.c (g_mime_message_add_arbitrary_header): Use the
	new GMimeHeader structure.
	(g_mime_message_new): Always initialize the arbitrary header array.
	(g_mime_message_destroy): The arbitrary header array will never
	be NULL (as it is now pre-initialized) so don't bother
	checking.
	(create_header): rfc2047 encode the arbitrary header values.

2000-10-17  Jeffrey Stedfast  <fejj@helixcode.com>

	* rfc/rfc*.txt: MIME specification RFCs

	* README: Updated.

	* TODO: Added a list of tasks that need to be done eventually.

	* gmime-parser.c (get_mime_part): rfc2047 decode the
	content-description before we set the value.

	* gmime-part.c (g_mime_part_to_string): rfc2047 encode the
	content-description before we write it to the string.

2000-10-06  Jeffrey Stedfast  <fejj@helixcode.com>

	* gmime-parser.c (construct_headers): rfc2047 decode some headers.

	* internet-address.c (internet_address_to_string): Now takes an
	argument to rfc2047 encode or not, when not rfc2047 encoding.
	(internet_address_new_from_string): Rewrote

	* gmime-message.c (create_header): rfc2047 encode addresses and
	subject headers.

2000-10-05  Jeffrey Stedfast  <fejj@helixcode.com>

	* gmime-utils.c (g_mime_utils_quoted_encode_step): Fixed some
	non-compliance issues like encoding all spaces as =20 even when
	they shouldn't have been.

2000-10-04  Jeffrey Stedfast  <fejj@helixcode.com>

	* acconfig.h:
	* config.h.in: #undef HAVE_ISBLANK

	* configure.in: Check for the isblank() GNU extension function.
	
	* gmime-parser.c (get_mime_part): Parse for the Content-Id. Use
	isblank() instead of isspace() when looking to see if the content
	header was wrapped. We want it to match only if the next char is
	either a tab or a space.
	(isblank): Define an isblank() macro if HAVE_ISBLANK isn't
	defined.

	* gmime-part.c (g_mime_part_set_content_id): New function to set
	the Content-ID.
	(g_mime_part_get_content_id): New function to get the Content-Id.
	(g_mime_part_to_string): Print content id's if available.
	(get_content_type): Eek! If there aren't any params, don't assign
	'string' an empty string! It's already been initialized with a
	type!

2000-10-04  Jeffrey Stedfast  <fejj@helixcode.com>

	* gmime-utils.c (quoted_decode): New function to decode rfc2047's
	version of the quoted-printable encoding.
	(decode_8bit_word): Use quoted_decode()
	(quoted_encode): New function to encode to rfc2047's version of
	quoted-printable (removed from the internals of encode_8bit_word)
	(encode_8bit_word): Use quoted_encode()

2000-10-01  Jeffrey Stedfast  <fejj@helixcode.com>

	* internet-address.c (internet_address_new_from_string): Fixed a
	logic error that cut off the last char of the name (or address).

	* gmime-parser.c (construct_headers): Optimized.

	* gmime-part.c (get_content_type): If there are no params, don't
	try to get any. Fixes a segfault.

	* gmime-utils.[c,h]: New utilities functions for use with libgmime
	(time and encoding/decoding routines)
	
	* test-mime.c: test some of the routines in gmime-utils.c

	* gmime.h.in: #include "gmime-utils.h"
	
	* configure.in: Added checks for time zone stuff

	* acconfig.h:
	* config.h.in: Added some #undef's for timezone stuff
	
	* Makefile.am: Added gmime-utils.[c,h]

2000-09-24  Jeffrey Stedfast  <fejj@helixcode.com>

	* HACKING: Updated

	* gmime-param.c: Wrote Gtk-docs comments

	* gmime-parser.c: Wrote Gtk-docs comments

	* AUTHORS: Updated

	* autogen.sh: Updated autogen.sh to look for gmime.h.in instead of
	gmime.h

2000-09-24  Jeffrey Stedfast  <fejj@helixcode.com>
	
	* gmime.h: Removed

	* gmime.h.in: Replacement for gmime.h - modified to be dynamically
	created at build-time.

	* configure.in: Updated to generate gmime.h and also to ignore
	doc/ until docs are written.

	* Makefile.am: Modified to ignore doc/

	* tests/*: MIME messages that break are likely to break MIME
	parsers.

2000-09-24  Jeffrey Stedfast  <fejj@helixcode.com>

	* gmime-part.c (get_content_disposition): Put a space between
	disposition parameters.
	(get_content_type): New convenience function to dump the content
	type and it's params to a string (for use internally).
	(g_mime_part_to_string): Use get_content_type and add print for
	content-description's.

	* gmime-parser.c (get_mime_part): strip leading/trailing
	whitespace from the disposition and convert param names to
	lowercase. Also fixed Content-Transfer-Encoding.

2000-09-23  Jeffrey Stedfast  <fejj@helixcode.com>

	* gmime-part.c (g_mime_part_destroy): Erm, make sure to increment
	to the next item in the list.

	* gmime-message.c (recipients_destroy): Optimized a bit

	* gmime-content-type.c (g_mime_content_type_new_from_string):
	Change all parameter names to lowercase, this way we can look them
	up without having to know which case the original name used (eg
	boundary).

	* test-mime.c: renamed from mime-test.c

	* test-parser.c: a new test program that allows us to specify a
	file to get our test email from.

2000-09-22  Jeffrey Stedfast  <fejj@helixcode.com>

	* configure.in: remember glib_cflags and glib_libs so we can dump
	them into gmime-config later.

	* gmime-config.in: use glib_cflags and glib_libs.

	* gmime.h: add variables for major/minor/micro release

	* Makefile.am: switch to GMIME_ instead of LIBGMIME_ stuff
